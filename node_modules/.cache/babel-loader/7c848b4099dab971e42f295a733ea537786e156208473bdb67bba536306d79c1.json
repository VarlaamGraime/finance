{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\Documents\\\\finance\\\\finance\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction суммаДоЗначения(массив1, массив2, нормаЧасов) {\n  let общаяСумма = 0;\n  let достигнута = -1;\n  let суммаПервогоМассива = 0;\n  let суммаИзВторогоМассива = 0;\n  let maxLength = Math.min(массив1.length, массив2.length);\n  for (let i = 0; i < maxLength; i++) {\n    общаяСумма += массив1[i] + массив2[i];\n    суммаПервогоМассива += массив1[i];\n    суммаИзВторогоМассива += массив2[i];\n    if (общаяСумма >= нормаЧасов) {\n      достигнута = i + 1;\n      break;\n    }\n  }\n  const оставшаяСумма = общаяСумма - нормаЧасов;\n  return {\n    общаяСумма,\n    достигнута,\n    суммаПервогоМассива,\n    суммаИзВторогоМассива,\n    оставшаяСумма\n  };\n}\nfunction App() {\n  _s();\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9]);\n  const [массив2, установитьМассив2] = useState([6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7]);\n  const рассчитатьИтоговуюЗП = () => {\n    const результат = суммаДоЗначения(массив1, массив2, нормаЧасов);\n    console.log(`Норма часов: ${нормаЧасов}`);\n    console.log(`Количество переработок: ${результат.общаяСумма}`);\n    if (результат.достигнута !== -1) {\n      console.log(`Достигнута норма часов: ${результат.достигнута}`);\n      console.log(`Дневные переработки (часов): ${результат.суммаПервогоМассива}`);\n      console.log(`Ночные переработки (часов): ${результат.суммаИзВторогоМассива}`);\n      console.log(`Оставшееся время: ${результат.оставшаяСумма}`);\n\n      // Рассчитываем цену за час\n      const ценаЗаЧас = оклад / нормаЧасов;\n      console.log(`Цена за час: ${ценаЗаЧас}`);\n\n      // Рассчитываем цену переработки (умножаем цену за час на 1.5)\n      const ценаПереработки = ценаЗаЧас * 1.5;\n      console.log(`Цена переработки: ${ценаПереработки}`);\n\n      // Рассчитываем дневные переработки (умножаем цену переработки на дневные переработки и вычитаем 13%)\n      const дневныеПереработки = ценаПереработки * результат.суммаПервогоМассива * 0.87;\n      console.log(`Дневные переработки: ${дневныеПереработки}`);\n\n      // Рассчитываем ночные переработки (умножаем цену переработки на ночные переработки, прибавляем 20%, и вычитаем 13%)\n      const ночныеПереработки = ценаПереработки * (результат.суммаИзВторогоМассива * 1.2) * 0.87;\n      console.log(`Ночные переработки: ${ночныеПереработки}`);\n\n      // Рассчитываем величину 20% от суммы из второго массива до достижения нормы часов\n      const ночныеВоВремяНормыЧасов = результат.суммаИзВторогоМассива * ценаЗаЧас * 0.2;\n      console.log(`Ночные во время нормы часов: ${ночныеВоВремяНормыЧасов}`);\n\n      // Рассчитываем итоговую зарплату (дневные переработки + ночные переработки + 20% от суммы из второго массива + 100000)\n      const итоговаяЗП = дневныеПереработки + ночныеПереработки + ночныеВоВремяНормыЧасов + 100000;\n\n      // Округляем значения до целых чисел\n      const округленнаяДневныеПереработки = Math.round(дневныеПереработки);\n      const округленныеНочныеПереработки = Math.round(ночныеПереработки);\n      const округленныеНочныеВоВремяНормыЧасов = Math.round(ночныеВоВремяНормыЧасов);\n      const округленнаяИтоговаяЗП = Math.round(итоговаяЗП);\n      console.log(`Округленные дневные переработки: ${округленнаяДневныеПереработки}`);\n      console.log(`Округленные ночные переработки: ${округленныеНочныеПереработки}`);\n      console.log(`Округленные ночные во время нормы часов: ${округленныеНочныеВоВремяНормыЧасов}`);\n      console.log(`Округленная итоговая зарплата: ${округленнаяИтоговаяЗП}`);\n    } else {\n      console.log('Не удалось достичь нормы часов.');\n    }\n  };\n  const handleInputChange = (event, setState) => {\n    const {\n      value\n    } = event.target;\n    setState(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: нормаЧасов,\n        onChange: e => handleInputChange(e, установитьНормуЧасов)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041E\\u043A\\u043B\\u0430\\u0434:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: оклад,\n        onChange: e => handleInputChange(e, установитьОклад)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041C\\u0430\\u0441\\u0441\\u0438\\u0432 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив1.join(','),\n        onChange: e => handleInputChange(e, установитьМассив1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041C\\u0430\\u0441\\u0441\\u0438\\u0432 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 2:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив2.join(','),\n        onChange: e => handleInputChange(e, установитьМассив2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: рассчитатьИтоговуюЗП,\n      children: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"style\",\n      children: [\"\\u041D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432: \", нормаЧасов, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043E\\u043A:  \", общаяСумма, \"\\u0414\\u043E\\u0441\\u0442\\u0438\\u0433\\u043D\\u0443\\u0442\\u0430 \\u043D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432: \\u0414\\u043D\\u0435\\u0432\\u043D\\u044B\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 (\\u0447\\u0430\\u0441\\u043E\\u0432): \\u041D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 (\\u0447\\u0430\\u0441\\u043E\\u0432): \\u041E\\u0441\\u0442\\u0430\\u0432\\u0448\\u0435\\u0435\\u0441\\u044F \\u0432\\u0440\\u0435\\u043C\\u044F: \\u0426\\u0435\\u043D\\u0430 \\u0437\\u0430 \\u0447\\u0430\\u0441: \\u0426\\u0435\\u043D\\u0430 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438: \\u0414\\u043D\\u0435\\u0432\\u043D\\u044B\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438: \\u041D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438: \\u041D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u0432\\u043E \\u0432\\u0440\\u0435\\u043C\\u044F \\u043D\\u043E\\u0440\\u043C\\u044B \\u0447\\u0430\\u0441\\u043E\\u0432: \\u041E\\u043A\\u0440\\u0443\\u0433\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043D\\u0435\\u0432\\u043D\\u044B\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438: \\u041E\\u043A\\u0440\\u0443\\u0433\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438: \\u041E\\u043A\\u0440\\u0443\\u0433\\u043B\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u0432\\u043E \\u0432\\u0440\\u0435\\u043C\\u044F \\u043D\\u043E\\u0440\\u043C\\u044B \\u0447\\u0430\\u0441\\u043E\\u0432: \\u041E\\u043A\\u0440\\u0443\\u0433\\u043B\\u0435\\u043D\\u043D\\u0430\\u044F \\u0438\\u0442\\u043E\\u0433\\u043E\\u0432\\u0430\\u044F \\u0437\\u0430\\u0440\\u043F\\u043B\\u0430\\u0442\\u0430:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5BI+o3P2Ea4Y6Rgjhx+3rIVXU5w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","суммаДоЗначения","массив1","массив2","нормаЧасов","общаяСумма","достигнута","суммаПервогоМассива","суммаИзВторогоМассива","maxLength","Math","min","length","i","оставшаяСумма","App","_s","установитьНормуЧасов","оклад","установитьОклад","установитьМассив1","установитьМассив2","рассчитатьИтоговуюЗП","результат","console","log","ценаЗаЧас","ценаПереработки","дневныеПереработки","ночныеПереработки","ночныеВоВремяНормыЧасов","итоговаяЗП","округленнаяДневныеПереработки","round","округленныеНочныеПереработки","округленныеНочныеВоВремяНормыЧасов","округленнаяИтоговаяЗП","handleInputChange","event","setState","value","target","className","children","type","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","join","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Александр/Documents/finance/finance/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction суммаДоЗначения(массив1, массив2, нормаЧасов) {\n  let общаяСумма = 0;\n  let достигнута = -1;\n  let суммаПервогоМассива = 0;\n  let суммаИзВторогоМассива = 0;\n\n  let maxLength = Math.min(массив1.length, массив2.length);\n\n  for (let i = 0; i < maxLength; i++) {\n    общаяСумма += массив1[i] + массив2[i];\n    суммаПервогоМассива += массив1[i];\n    суммаИзВторогоМассива += массив2[i];\n\n    if (общаяСумма >= нормаЧасов) {\n      достигнута = i + 1;\n      break;\n    }\n  }\n\n  const оставшаяСумма = общаяСумма - нормаЧасов;\n\n  return {\n    общаяСумма,\n    достигнута,\n    суммаПервогоМассива,\n    суммаИзВторогоМассива,\n    оставшаяСумма\n  };\n}\n\n\nfunction App() {\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9]);\n  const [массив2, установитьМассив2] = useState([6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7]);\n\n  const рассчитатьИтоговуюЗП = () => {\n    const результат = суммаДоЗначения(массив1, массив2, нормаЧасов);\n\n    console.log(`Норма часов: ${нормаЧасов}`);\n    console.log(`Количество переработок: ${результат.общаяСумма}`);\n\n    if (результат.достигнута !== -1) {\n      console.log(`Достигнута норма часов: ${результат.достигнута}`);\n      console.log(`Дневные переработки (часов): ${результат.суммаПервогоМассива}`);\n      console.log(`Ночные переработки (часов): ${результат.суммаИзВторогоМассива}`);\n      console.log(`Оставшееся время: ${результат.оставшаяСумма}`);\n\n      // Рассчитываем цену за час\n      const ценаЗаЧас = оклад / нормаЧасов;\n      console.log(`Цена за час: ${ценаЗаЧас}`);\n\n      // Рассчитываем цену переработки (умножаем цену за час на 1.5)\n      const ценаПереработки = ценаЗаЧас * 1.5;\n      console.log(`Цена переработки: ${ценаПереработки}`);\n\n      // Рассчитываем дневные переработки (умножаем цену переработки на дневные переработки и вычитаем 13%)\n      const дневныеПереработки = ценаПереработки * результат.суммаПервогоМассива * 0.87;\n      console.log(`Дневные переработки: ${дневныеПереработки}`);\n\n      // Рассчитываем ночные переработки (умножаем цену переработки на ночные переработки, прибавляем 20%, и вычитаем 13%)\n      const ночныеПереработки = ценаПереработки * (результат.суммаИзВторогоМассива * 1.2) * 0.87;\n      console.log(`Ночные переработки: ${ночныеПереработки}`);\n\n      // Рассчитываем величину 20% от суммы из второго массива до достижения нормы часов\n      const ночныеВоВремяНормыЧасов = результат.суммаИзВторогоМассива * ценаЗаЧас * 0.2;\n      console.log(`Ночные во время нормы часов: ${ночныеВоВремяНормыЧасов}`);\n\n      // Рассчитываем итоговую зарплату (дневные переработки + ночные переработки + 20% от суммы из второго массива + 100000)\n      const итоговаяЗП = дневныеПереработки + ночныеПереработки + ночныеВоВремяНормыЧасов + 100000;\n\n      // Округляем значения до целых чисел\n      const округленнаяДневныеПереработки = Math.round(дневныеПереработки);\n      const округленныеНочныеПереработки = Math.round(ночныеПереработки);\n      const округленныеНочныеВоВремяНормыЧасов = Math.round(ночныеВоВремяНормыЧасов);\n      const округленнаяИтоговаяЗП = Math.round(итоговаяЗП);\n\n      console.log(`Округленные дневные переработки: ${округленнаяДневныеПереработки}`);\n      console.log(`Округленные ночные переработки: ${округленныеНочныеПереработки}`);\n      console.log(`Округленные ночные во время нормы часов: ${округленныеНочныеВоВремяНормыЧасов}`);\n      console.log(`Округленная итоговая зарплата: ${округленнаяИтоговаяЗП}`);\n    } else {\n      console.log('Не удалось достичь нормы часов.');\n    }\n  };\n\n  const handleInputChange = (event, setState) => {\n    const { value } = event.target;\n    setState(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <label>\n        Норма часов:\n        <input type=\"number\" value={нормаЧасов} onChange={(e) => handleInputChange(e, установитьНормуЧасов)} />\n      </label>\n\n      <label>\n        Оклад:\n        <input type=\"number\" value={оклад} onChange={(e) => handleInputChange(e, установитьОклад)} />\n      </label>\n\n      <label>\n        Массив данных 1:\n        <input type=\"text\" value={массив1.join(',')} onChange={(e) => handleInputChange(e, установитьМассив1)} />\n      </label>\n\n      <label>\n        Массив данных 2:\n        <input type=\"text\" value={массив2.join(',')} onChange={(e) => handleInputChange(e, установитьМассив2)} />\n      </label>\n\n      <button onClick={рассчитатьИтоговуюЗП}>Рассчитать</button>\n      <div className='style'>\n        Норма часов: {нормаЧасов }\n        Количество переработок:  {общаяСумма}\n        Достигнута норма часов: \n        Дневные переработки (часов):  \n        Ночные переработки (часов):  \n        Оставшееся время:  \n        Цена за час: \n        Цена переработки: \n        Дневные переработки: \n        Ночные переработки: \n        Ночные во время нормы часов: \n        Округленные дневные переработки: \n        Округленные ночные переработки: \n        Округленные ночные во время нормы часов: \n        Округленная итоговая зарплата: \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,eAAeA,CAACC,OAAO,EAAEC,OAAO,EAAEC,UAAU,EAAE;EACrD,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,UAAU,GAAG,CAAC,CAAC;EACnB,IAAIC,mBAAmB,GAAG,CAAC;EAC3B,IAAIC,qBAAqB,GAAG,CAAC;EAE7B,IAAIC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACT,OAAO,CAACU,MAAM,EAAET,OAAO,CAACS,MAAM,CAAC;EAExD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,SAAS,EAAEI,CAAC,EAAE,EAAE;IAClCR,UAAU,IAAIH,OAAO,CAACW,CAAC,CAAC,GAAGV,OAAO,CAACU,CAAC,CAAC;IACrCN,mBAAmB,IAAIL,OAAO,CAACW,CAAC,CAAC;IACjCL,qBAAqB,IAAIL,OAAO,CAACU,CAAC,CAAC;IAEnC,IAAIR,UAAU,IAAID,UAAU,EAAE;MAC5BE,UAAU,GAAGO,CAAC,GAAG,CAAC;MAClB;IACF;EACF;EAEA,MAAMC,aAAa,GAAGT,UAAU,GAAGD,UAAU;EAE7C,OAAO;IACLC,UAAU;IACVC,UAAU;IACVC,mBAAmB;IACnBC,qBAAqB;IACrBM;EACF,CAAC;AACH;AAGA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACZ,UAAU,EAAEa,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,GAAG,CAAC;EACxD,MAAM,CAACoB,KAAK,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,MAAM,CAAC;EACjD,MAAM,CAACI,OAAO,EAAEkB,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAChI,MAAM,CAACK,OAAO,EAAEkB,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAE1H,MAAMwB,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,SAAS,GAAGtB,eAAe,CAACC,OAAO,EAAEC,OAAO,EAAEC,UAAU,CAAC;IAE/DoB,OAAO,CAACC,GAAG,CAAE,gBAAerB,UAAW,EAAC,CAAC;IACzCoB,OAAO,CAACC,GAAG,CAAE,2BAA0BF,SAAS,CAAClB,UAAW,EAAC,CAAC;IAE9D,IAAIkB,SAAS,CAACjB,UAAU,KAAK,CAAC,CAAC,EAAE;MAC/BkB,OAAO,CAACC,GAAG,CAAE,2BAA0BF,SAAS,CAACjB,UAAW,EAAC,CAAC;MAC9DkB,OAAO,CAACC,GAAG,CAAE,gCAA+BF,SAAS,CAAChB,mBAAoB,EAAC,CAAC;MAC5EiB,OAAO,CAACC,GAAG,CAAE,+BAA8BF,SAAS,CAACf,qBAAsB,EAAC,CAAC;MAC7EgB,OAAO,CAACC,GAAG,CAAE,qBAAoBF,SAAS,CAACT,aAAc,EAAC,CAAC;;MAE3D;MACA,MAAMY,SAAS,GAAGR,KAAK,GAAGd,UAAU;MACpCoB,OAAO,CAACC,GAAG,CAAE,gBAAeC,SAAU,EAAC,CAAC;;MAExC;MACA,MAAMC,eAAe,GAAGD,SAAS,GAAG,GAAG;MACvCF,OAAO,CAACC,GAAG,CAAE,qBAAoBE,eAAgB,EAAC,CAAC;;MAEnD;MACA,MAAMC,kBAAkB,GAAGD,eAAe,GAAGJ,SAAS,CAAChB,mBAAmB,GAAG,IAAI;MACjFiB,OAAO,CAACC,GAAG,CAAE,wBAAuBG,kBAAmB,EAAC,CAAC;;MAEzD;MACA,MAAMC,iBAAiB,GAAGF,eAAe,IAAIJ,SAAS,CAACf,qBAAqB,GAAG,GAAG,CAAC,GAAG,IAAI;MAC1FgB,OAAO,CAACC,GAAG,CAAE,uBAAsBI,iBAAkB,EAAC,CAAC;;MAEvD;MACA,MAAMC,uBAAuB,GAAGP,SAAS,CAACf,qBAAqB,GAAGkB,SAAS,GAAG,GAAG;MACjFF,OAAO,CAACC,GAAG,CAAE,gCAA+BK,uBAAwB,EAAC,CAAC;;MAEtE;MACA,MAAMC,UAAU,GAAGH,kBAAkB,GAAGC,iBAAiB,GAAGC,uBAAuB,GAAG,MAAM;;MAE5F;MACA,MAAME,6BAA6B,GAAGtB,IAAI,CAACuB,KAAK,CAACL,kBAAkB,CAAC;MACpE,MAAMM,4BAA4B,GAAGxB,IAAI,CAACuB,KAAK,CAACJ,iBAAiB,CAAC;MAClE,MAAMM,kCAAkC,GAAGzB,IAAI,CAACuB,KAAK,CAACH,uBAAuB,CAAC;MAC9E,MAAMM,qBAAqB,GAAG1B,IAAI,CAACuB,KAAK,CAACF,UAAU,CAAC;MAEpDP,OAAO,CAACC,GAAG,CAAE,oCAAmCO,6BAA8B,EAAC,CAAC;MAChFR,OAAO,CAACC,GAAG,CAAE,mCAAkCS,4BAA6B,EAAC,CAAC;MAC9EV,OAAO,CAACC,GAAG,CAAE,4CAA2CU,kCAAmC,EAAC,CAAC;MAC7FX,OAAO,CAACC,GAAG,CAAE,kCAAiCW,qBAAsB,EAAC,CAAC;IACxE,CAAC,MAAM;MACLZ,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD;EACF,CAAC;EAED,MAAMY,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAC7C,MAAM;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IAC9BF,QAAQ,CAACC,KAAK,CAAC;EACjB,CAAC;EAED,oBACExC,OAAA;IAAK0C,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3C,OAAA;MAAA2C,QAAA,GAAO,gEAEL,eAAA3C,OAAA;QAAO4C,IAAI,EAAC,QAAQ;QAACJ,KAAK,EAAEpC,UAAW;QAACyC,QAAQ,EAAGC,CAAC,IAAKT,iBAAiB,CAACS,CAAC,EAAE7B,oBAAoB;MAAE;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG,CAAC,eAERlD,OAAA;MAAA2C,QAAA,GAAO,iCAEL,eAAA3C,OAAA;QAAO4C,IAAI,EAAC,QAAQ;QAACJ,KAAK,EAAEtB,KAAM;QAAC2B,QAAQ,EAAGC,CAAC,IAAKT,iBAAiB,CAACS,CAAC,EAAE3B,eAAe;MAAE;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC,eAERlD,OAAA;MAAA2C,QAAA,GAAO,8EAEL,eAAA3C,OAAA;QAAO4C,IAAI,EAAC,MAAM;QAACJ,KAAK,EAAEtC,OAAO,CAACiD,IAAI,CAAC,GAAG,CAAE;QAACN,QAAQ,EAAGC,CAAC,IAAKT,iBAAiB,CAACS,CAAC,EAAE1B,iBAAiB;MAAE;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpG,CAAC,eAERlD,OAAA;MAAA2C,QAAA,GAAO,8EAEL,eAAA3C,OAAA;QAAO4C,IAAI,EAAC,MAAM;QAACJ,KAAK,EAAErC,OAAO,CAACgD,IAAI,CAAC,GAAG,CAAE;QAACN,QAAQ,EAAGC,CAAC,IAAKT,iBAAiB,CAACS,CAAC,EAAEzB,iBAAiB;MAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpG,CAAC,eAERlD,OAAA;MAAQoD,OAAO,EAAE9B,oBAAqB;MAAAqB,QAAA,EAAC;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1DlD,OAAA;MAAK0C,SAAS,EAAC,OAAO;MAAAC,QAAA,GAAC,iEACR,EAACvC,UAAU,EAAE,oIACD,EAACC,UAAU,EAAC,0sDAcvC;IAAA;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClC,EAAA,CAvGQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAyGZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}