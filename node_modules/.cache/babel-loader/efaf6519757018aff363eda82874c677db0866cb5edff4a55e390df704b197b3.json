{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\Documents\\\\finance\\\\finance\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  function суммаДоЗначения(arr1, arr2, цель) {\n    let сумма = 0;\n    let индекс1 = 0;\n    let индекс2 = 0;\n    let суммаИзВторогоМассива = 0;\n    let суммаПервогоМассива = 0;\n    while (сумма < цель && индекс1 < arr1.length && индекс2 < arr2.length) {\n      const значение1 = arr1[индекс1++];\n      const значение2 = arr2[индекс2++];\n      сумма += значение1 + значение2;\n      суммаИзВторогоМассива += значение2;\n      суммаПервогоМассива += значение1;\n    }\n\n    // Вычисляем остаток от числа после достижения цели\n    const остаток = сумма - цель;\n\n    // Рассчитываем сумму оставшихся чисел из массивов, включая остаток\n    const оставшиеЧисла = arr1.slice(индекс1).concat(arr2.slice(индекс2));\n    const оставшаяСумма = оставшиеЧисла.reduce((acc, текущее) => acc + текущее, остаток);\n\n    // Исправление: Общая сумма должна быть рассчитана по всем элементам массивов, включая оставшиеся\n    const общаяСумма = arr1.reduce((acc, текущее) => acc + текущее, остаток) + arr2.reduce((acc, текущее) => acc + текущее, 0);\n    return {\n      достигнута: сумма >= цель ? сумма : -1,\n      общаяСумма: общаяСумма,\n      суммаИзВторогоМассива: суммаИзВторогоМассива,\n      суммаПервогоМассива: суммаПервогоМассива,\n      оставшаяСумма: оставшаяСумма\n    };\n  }\n\n  // Ваши массивы данных\n  const массив1 = [9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9];\n  const массив2 = [6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7];\n  const целеваяСумма = 167;\n  const результат = суммаДоЗначения(массив1, массив2, целеваяСумма);\n  console.log(`Целевая сумма: ${целеваяСумма}`);\n  console.log(`Общая сумма двух массивов: ${результат.общаяСумма}`);\n  if (результат.достигнута !== -1) {\n    console.log(`Достигнута целевая сумма: ${результат.достигнута}`);\n    console.log(`Сумма из первого массива после достижения цели: ${результат.суммаПервогоМассива}`);\n    console.log(`Сумма из второго массива после достижения цели: ${результат.суммаИзВторогоМассива}`);\n    console.log(`Оставшаяся сумма: ${результат.оставшаяСумма}`);\n  } else {\n    console.log('Не удалось достичь целевую сумму.');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","суммаДоЗначения","arr1","arr2","цель","сумма","индекс1","индекс2","суммаИзВторогоМассива","суммаПервогоМассива","length","значение1","значение2","остаток","оставшиеЧисла","slice","concat","оставшаяСумма","reduce","acc","текущее","общаяСумма","достигнута","массив1","массив2","целеваяСумма","результат","console","log","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Александр/Documents/finance/finance/src/App.js"],"sourcesContent":["import React from \"react\";\nfunction App() {\n\n  function суммаДоЗначения(arr1, arr2, цель) {\n    let сумма = 0;\n    let индекс1 = 0;\n    let индекс2 = 0;\n    let суммаИзВторогоМассива = 0;\n    let суммаПервогоМассива = 0;\n\n    while (сумма < цель && индекс1 < arr1.length && индекс2 < arr2.length) {\n        const значение1 = arr1[индекс1++];\n        const значение2 = arr2[индекс2++];\n        \n        сумма += значение1 + значение2;\n        суммаИзВторогоМассива += значение2;\n        суммаПервогоМассива += значение1;\n    }\n\n    // Вычисляем остаток от числа после достижения цели\n    const остаток = сумма - цель;\n\n    // Рассчитываем сумму оставшихся чисел из массивов, включая остаток\n    const оставшиеЧисла = arr1.slice(индекс1).concat(arr2.slice(индекс2));\n    const оставшаяСумма = оставшиеЧисла.reduce((acc, текущее) => acc + текущее, остаток);\n\n    // Исправление: Общая сумма должна быть рассчитана по всем элементам массивов, включая оставшиеся\n    const общаяСумма = arr1.reduce((acc, текущее) => acc + текущее, остаток) + arr2.reduce((acc, текущее) => acc + текущее, 0);\n\n    return {\n        достигнута: сумма >= цель ? сумма : -1,\n        общаяСумма: общаяСумма,\n        суммаИзВторогоМассива: суммаИзВторогоМассива,\n        суммаПервогоМассива: суммаПервогоМассива,\n        оставшаяСумма: оставшаяСумма\n    };\n}\n\n// Ваши массивы данных\nconst массив1 = [9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9];\nconst массив2 = [6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7];\n\nconst целеваяСумма = 167;\n\nconst результат = суммаДоЗначения(массив1, массив2, целеваяСумма);\n\nconsole.log(`Целевая сумма: ${целеваяСумма}`);\nconsole.log(`Общая сумма двух массивов: ${результат.общаяСумма}`);\n\nif (результат.достигнута !== -1) {\n    console.log(`Достигнута целевая сумма: ${результат.достигнута}`);\n    console.log(`Сумма из первого массива после достижения цели: ${результат.суммаПервогоМассива}`);\n    console.log(`Сумма из второго массива после достижения цели: ${результат.суммаИзВторогоМассива}`);\n    console.log(`Оставшаяся сумма: ${результат.оставшаяСумма}`);\n} else {\n    console.log('Не удалось достичь целевую сумму.');\n}\n\n\n\n  return (\n    <div className=\"App\">\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,SAASC,GAAGA,CAAA,EAAG;EAEb,SAASC,eAAeA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;IACzC,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,OAAO,GAAG,CAAC;IACf,IAAIC,OAAO,GAAG,CAAC;IACf,IAAIC,qBAAqB,GAAG,CAAC;IAC7B,IAAIC,mBAAmB,GAAG,CAAC;IAE3B,OAAOJ,KAAK,GAAGD,IAAI,IAAIE,OAAO,GAAGJ,IAAI,CAACQ,MAAM,IAAIH,OAAO,GAAGJ,IAAI,CAACO,MAAM,EAAE;MACnE,MAAMC,SAAS,GAAGT,IAAI,CAACI,OAAO,EAAE,CAAC;MACjC,MAAMM,SAAS,GAAGT,IAAI,CAACI,OAAO,EAAE,CAAC;MAEjCF,KAAK,IAAIM,SAAS,GAAGC,SAAS;MAC9BJ,qBAAqB,IAAII,SAAS;MAClCH,mBAAmB,IAAIE,SAAS;IACpC;;IAEA;IACA,MAAME,OAAO,GAAGR,KAAK,GAAGD,IAAI;;IAE5B;IACA,MAAMU,aAAa,GAAGZ,IAAI,CAACa,KAAK,CAACT,OAAO,CAAC,CAACU,MAAM,CAACb,IAAI,CAACY,KAAK,CAACR,OAAO,CAAC,CAAC;IACrE,MAAMU,aAAa,GAAGH,aAAa,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,GAAGC,OAAO,EAAEP,OAAO,CAAC;;IAEpF;IACA,MAAMQ,UAAU,GAAGnB,IAAI,CAACgB,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,GAAGC,OAAO,EAAEP,OAAO,CAAC,GAAGV,IAAI,CAACe,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,GAAGC,OAAO,EAAE,CAAC,CAAC;IAE1H,OAAO;MACHE,UAAU,EAAEjB,KAAK,IAAID,IAAI,GAAGC,KAAK,GAAG,CAAC,CAAC;MACtCgB,UAAU,EAAEA,UAAU;MACtBb,qBAAqB,EAAEA,qBAAqB;MAC5CC,mBAAmB,EAAEA,mBAAmB;MACxCQ,aAAa,EAAEA;IACnB,CAAC;EACL;;EAEA;EACA,MAAMM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACjG,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE3F,MAAMC,YAAY,GAAG,GAAG;EAExB,MAAMC,SAAS,GAAGzB,eAAe,CAACsB,OAAO,EAAEC,OAAO,EAAEC,YAAY,CAAC;EAEjEE,OAAO,CAACC,GAAG,CAAE,kBAAiBH,YAAa,EAAC,CAAC;EAC7CE,OAAO,CAACC,GAAG,CAAE,8BAA6BF,SAAS,CAACL,UAAW,EAAC,CAAC;EAEjE,IAAIK,SAAS,CAACJ,UAAU,KAAK,CAAC,CAAC,EAAE;IAC7BK,OAAO,CAACC,GAAG,CAAE,6BAA4BF,SAAS,CAACJ,UAAW,EAAC,CAAC;IAChEK,OAAO,CAACC,GAAG,CAAE,mDAAkDF,SAAS,CAACjB,mBAAoB,EAAC,CAAC;IAC/FkB,OAAO,CAACC,GAAG,CAAE,mDAAkDF,SAAS,CAAClB,qBAAsB,EAAC,CAAC;IACjGmB,OAAO,CAACC,GAAG,CAAE,qBAAoBF,SAAS,CAACT,aAAc,EAAC,CAAC;EAC/D,CAAC,MAAM;IACHU,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EACpD;EAIE,oBACE7B,OAAA;IAAK8B,SAAS,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGf,CAAC;AAEV;AAACC,EAAA,GAjEQlC,GAAG;AAmEZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}