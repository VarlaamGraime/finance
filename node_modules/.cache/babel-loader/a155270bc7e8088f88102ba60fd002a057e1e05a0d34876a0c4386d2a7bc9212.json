{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\Documents\\\\finance\\\\finance\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9]);\n  const [массив2, установитьМассив2] = useState([6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7]);\n  const [результаты, установитьРезультаты] = useState(null);\n  const рассчитатьИтоговуюЗП = () => {\n    const результаты = суммаДоЗначения(массив1, массив2, нормаЧасов);\n    установитьРезультаты(результаты);\n    console.log('Итоговые результаты:', результаты); // Добавим этот вывод\n  };\n  const handleInputChange = (event, setState) => {\n    const {\n      value\n    } = event.target;\n    setState(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App list\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: нормаЧасов,\n        onChange: e => handleInputChange(e, установитьНормуЧасов)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041E\\u043A\\u043B\\u0430\\u0434:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: оклад,\n        onChange: e => handleInputChange(e, установитьОклад)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u0414\\u043D\\u0435\\u0432\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0441\\u044B \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0437\\u0430\\u043F\\u044F\\u0442\\u0443\\u044E:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив1.join(','),\n        onChange: e => handleInputChange(e, установитьМассив1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0441\\u044B \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0437\\u0430\\u043F\\u044F\\u0442\\u0443\\u044E:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив2.join(','),\n        onChange: e => handleInputChange(e, установитьМассив2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: рассчитатьИтоговуюЗП,\n      children: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), результаты && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432: \", нормаЧасов]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043E\\u043A: \", результаты.общаяСумма]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0414\\u043D\\u0435\\u0432\\u043D\\u044B\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 (\\u0447\\u0430\\u0441\\u043E\\u0432): \", результаты.суммаПервогоМассива]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 (\\u0447\\u0430\\u0441\\u043E\\u0432): \", результаты.суммаИзВторогоМассива]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0441\\u0442\\u0430\\u0432\\u0448\\u0435\\u0435\\u0441\\u044F \\u0432\\u0440\\u0435\\u043C\\u044F: \", результаты.оставшаяСумма]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WPv4nj728q5VOqnlED5C6ouUn2U=\");\n_c = App;\nexport default App;\nfunction суммаДоЗначения(массив1, массив2, нормаЧасов) {\n  let общаяСумма = 0;\n  let достигнута = -1;\n  let суммаПервогоМассива = 0;\n  let суммаИзВторогоМассива = 0;\n  let maxLength = Math.min(массив1.length, массив2.length);\n  for (let i = 0; i < maxLength; i++) {\n    общаяСумма += массив1[i] + массив2[i];\n    суммаПервогоМассива += массив1[i];\n    суммаИзВторогоМассива += массив2[i];\n    if (общаяСумма >= нормаЧасов) {\n      достигнута = i + 1;\n      break;\n    }\n  }\n  const оставшаяСумма = Math.max(общаяСумма - нормаЧасов, 0);\n  return {\n    общаяСумма,\n    достигнута,\n    суммаПервогоМассива,\n    суммаИзВторогоМассива,\n    оставшаяСумма\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","нормаЧасов","установитьНормуЧасов","оклад","установитьОклад","массив1","установитьМассив1","массив2","установитьМассив2","результаты","установитьРезультаты","рассчитатьИтоговуюЗП","суммаДоЗначения","console","log","handleInputChange","event","setState","value","target","className","children","type","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","join","onClick","общаяСумма","суммаПервогоМассива","суммаИзВторогоМассива","оставшаяСумма","_c","достигнута","maxLength","Math","min","length","i","max","$RefreshReg$"],"sources":["C:/Users/Александр/Documents/finance/finance/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9]);\n  const [массив2, установитьМассив2] = useState([6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7]);\n  const [результаты, установитьРезультаты] = useState(null);\n\n  const рассчитатьИтоговуюЗП = () => {\n    const результаты = суммаДоЗначения(массив1, массив2, нормаЧасов);\n    установитьРезультаты(результаты);\n    console.log('Итоговые результаты:', результаты); // Добавим этот вывод\n  };\n  \n  \n\n  const handleInputChange = (event, setState) => {\n    const { value } = event.target;\n    setState(value);\n  };\n\n  return (\n    <div className=\"App list\">\n      <label>\n        Норма часов:\n        <input type=\"number\" value={нормаЧасов} onChange={(e) => handleInputChange(e, установитьНормуЧасов)} />\n      </label>\n\n      <label>\n        Оклад:\n        <input type=\"number\" value={оклад} onChange={(e) => handleInputChange(e, установитьОклад)} />\n      </label>\n\n      <label>\n        Дневные часы через запятую:\n        <input type=\"text\" value={массив1.join(',')} onChange={(e) => handleInputChange(e, установитьМассив1)} />\n      </label>\n\n      <label>\n        Ночные часы через запятую:\n        <input type=\"text\" value={массив2.join(',')} onChange={(e) => handleInputChange(e, установитьМассив2)} />\n      </label>\n\n      <button onClick={рассчитатьИтоговуюЗП}>Рассчитать</button>\n\n      {/* Вывод результатов */}\n      {результаты && (\n        <div>\n             <p>Норма часов: {нормаЧасов}</p>\n    <p>Общее количество переработок: {результаты.общаяСумма}</p>\n    <p>Дневные переработки (часов): {результаты.суммаПервогоМассива}</p>\n    <p>Ночные переработки (часов): {результаты.суммаИзВторогоМассива}</p>\n    <p>Оставшееся время: {результаты.оставшаяСумма}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\nfunction суммаДоЗначения(массив1, массив2, нормаЧасов) {\n  let общаяСумма = 0;\n  let достигнута = -1;\n  let суммаПервогоМассива = 0;\n  let суммаИзВторогоМассива = 0;\n\n  let maxLength = Math.min(массив1.length, массив2.length);\n\n  for (let i = 0; i < maxLength; i++) {\n    общаяСумма += массив1[i] + массив2[i];\n    суммаПервогоМассива += массив1[i];\n    суммаИзВторогоМассива += массив2[i];\n\n    if (общаяСумма >= нормаЧасов) {\n      достигнута = i + 1;\n      break;\n    }\n  }\n\n  const оставшаяСумма = Math.max(общаяСумма - нормаЧасов, 0);\n\n  return {\n    общаяСумма,\n    достигнута,\n    суммаПервогоМассива,\n    суммаИзВторогоМассива,\n    оставшаяСумма\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}