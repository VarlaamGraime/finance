{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\Documents\\\\finance\\\\finance\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../src/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction суммаДоЗначения(массив1, массив2, нормаЧасов) {\n  let общаяСумма = 0;\n  let достигнута = -1;\n  let суммаПервогоМассива = 0;\n  let суммаИзВторогоМассива = 0;\n  let maxLength = Math.min(массив1.length, массив2.length);\n  for (let i = 0; i < maxLength; i++) {\n    общаяСумма += массив1[i] + массив2[i];\n    суммаПервогоМассива += массив1[i];\n    суммаИзВторогоМассива += массив2[i];\n    if (общаяСумма >= нормаЧасов) {\n      достигнута = i + 1;\n      break;\n    }\n  }\n  const оставшаяСумма = общаяСумма - нормаЧасов;\n  return {\n    общаяСумма,\n    достигнута,\n    суммаПервогоМассива,\n    суммаИзВторогоМассива,\n    оставшаяСумма\n  };\n}\nfunction App() {\n  _s();\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9]);\n  const [массив2, установитьМассив2] = useState([6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7]);\n  const результаты = суммаДоЗначения(массив1, массив2, нормаЧасов);\n  console.log(`Норма часов: ${нормаЧасов}`);\n  console.log(`Количество переработок: ${результаты.общаяСумма}`);\n  if (результаты.достигнута !== -1) {\n    console.log(`Достигнута норма часов: ${результаты.достигнута}`);\n    console.log(`Дневные переработки (часов): ${результаты.суммаПервогоМассива}`);\n    console.log(`Ночные переработки (часов): ${результаты.суммаИзВторогоМассива}`);\n    console.log(`Оставшееся время: ${результаты.оставшаяСумма}`);\n\n    // Рассчитываем цену за час\n    const ценаЗаЧас = оклад / нормаЧасов;\n    console.log(`Цена за час: ${ценаЗаЧас}`);\n\n    // Рассчитываем цену переработки (умножаем цену за час на 1.5)\n    const ценаПереработки = ценаЗаЧас * 1.5;\n    console.log(`Цена переработки: ${ценаПереработки}`);\n\n    // Рассчитываем дневные переработки (умножаем цену переработки на дневные переработки и вычитаем 13%)\n    const дневныеПереработки = ценаПереработки * результаты.суммаПервогоМассива * 0.87;\n    console.log(`Дневные переработки: ${дневныеПереработки}`);\n\n    // Рассчитываем ночные переработки (умножаем цену переработки на ночные переработки, прибавляем 20%, и вычитаем 13%)\n    const ночныеПереработки = ценаПереработки * (результаты.суммаИзВторогоМассива * 1.2) * 0.87;\n    console.log(`Ночные переработки: ${ночныеПереработки}`);\n\n    // Рассчитываем величину 20% от суммы из второго массива до достижения нормы часов\n    const ночныеВоВремяНормыЧасов = результаты.суммаИзВторогоМассива * ценаЗаЧас * 0.2;\n    console.log(`Ночные во время нормы часов: ${ночныеВоВремяНормыЧасов}`);\n\n    // Рассчитываем итоговую зарплату (дневные переработки + ночные переработки + 20% от суммы из второго массива + 100000)\n    const итоговаяЗП = дневныеПереработки + ночныеПереработки + ночныеВоВремяНормыЧасов + 100000;\n\n    // Округляем значения до целых чисел\n    const округленнаяДневныеПереработки = Math.round(дневныеПереработки);\n    const округленныеНочныеПереработки = Math.round(ночныеПереработки);\n    const округленныеНочныеВоВремяНормыЧасов = Math.round(ночныеВоВремяНормыЧасов);\n    const округленнаяИтоговаяЗП = Math.round(итоговаяЗП);\n    console.log(`Округленные дневные переработки: ${округленнаяДневныеПереработки}`);\n    console.log(`Округленные ночные переработки: ${округленныеНочныеПереработки}`);\n    console.log(`Округленные ночные во время нормы часов: ${округленныеНочныеВоВремяНормыЧасов}`);\n    console.log(`Округленная итоговая зарплата: ${округленнаяИтоговаяЗП}`);\n  } else {\n    console.log('Не удалось достичь нормы часов.');\n  }\n  const handleInputChange = (event, setState) => {\n    const {\n      value\n    } = event.target;\n    setState(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App list\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: нормаЧасов,\n        onChange: e => handleInputChange(e, установитьНормуЧасов)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041E\\u043A\\u043B\\u0430\\u0434:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: оклад,\n        onChange: e => handleInputChange(e, установитьОклад)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u0414\\u043D\\u0435\\u0432\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0441\\u044B \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0437\\u0430\\u043F\\u044F\\u0442\\u0443\\u044E:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив1.join(','),\n        onChange: e => handleInputChange(e, установитьМассив1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0441\\u044B \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0437\\u0430\\u043F\\u044F\\u0442\\u0443\\u044E:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив2.join(','),\n        onChange: e => handleInputChange(e, установитьМассив2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), результаты.достигнута !== -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432: \", нормаЧасов]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043E\\u043A: \", результаты.общаяСумма]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0414\\u043D\\u0435\\u0432\\u043D\\u044B\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 (\\u0447\\u0430\\u0441\\u043E\\u0432): \", результаты.суммаПервогоМассива]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 (\\u0447\\u0430\\u0441\\u043E\\u0432): \", результаты.суммаИзВторогоМассива]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0441\\u0442\\u0430\\u0432\\u0448\\u0435\\u0435\\u0441\\u044F \\u0432\\u0440\\u0435\\u043C\\u044F: \", результаты.оставшаяСумма]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0434\\u043E\\u0441\\u0442\\u0438\\u0447\\u044C \\u043D\\u043E\\u0440\\u043C\\u044B \\u0447\\u0430\\u0441\\u043E\\u0432.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: рассчитатьИтоговуюЗП,\n      children: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5BI+o3P2Ea4Y6Rgjhx+3rIVXU5w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","суммаДоЗначения","массив1","массив2","нормаЧасов","общаяСумма","достигнута","суммаПервогоМассива","суммаИзВторогоМассива","maxLength","Math","min","length","i","оставшаяСумма","App","_s","установитьНормуЧасов","оклад","установитьОклад","установитьМассив1","установитьМассив2","результаты","console","log","ценаЗаЧас","ценаПереработки","дневныеПереработки","ночныеПереработки","ночныеВоВремяНормыЧасов","итоговаяЗП","округленнаяДневныеПереработки","round","округленныеНочныеПереработки","округленныеНочныеВоВремяНормыЧасов","округленнаяИтоговаяЗП","handleInputChange","event","setState","value","target","className","children","type","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","join","onClick","рассчитатьИтоговуюЗП","_c","$RefreshReg$"],"sources":["C:/Users/Александр/Documents/finance/finance/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../src/style.css';\n\nfunction суммаДоЗначения(массив1, массив2, нормаЧасов) {\n  let общаяСумма = 0;\n  let достигнута = -1;\n  let суммаПервогоМассива = 0;\n  let суммаИзВторогоМассива = 0;\n\n  let maxLength = Math.min(массив1.length, массив2.length);\n\n  for (let i = 0; i < maxLength; i++) {\n    общаяСумма += массив1[i] + массив2[i];\n    суммаПервогоМассива += массив1[i];\n    суммаИзВторогоМассива += массив2[i];\n\n    if (общаяСумма >= нормаЧасов) {\n      достигнута = i + 1;\n      break;\n    }\n  }\n\n  const оставшаяСумма = общаяСумма - нормаЧасов;\n\n  return {\n    общаяСумма,\n    достигнута,\n    суммаПервогоМассива,\n    суммаИзВторогоМассива,\n    оставшаяСумма\n  };\n}\n\n\nfunction App() {\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9]);\n  const [массив2, установитьМассив2] = useState([6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7]);\n\n  const результаты = суммаДоЗначения(массив1, массив2, нормаЧасов);\n\n  console.log(`Норма часов: ${нормаЧасов}`);\n  console.log(`Количество переработок: ${результаты.общаяСумма}`);\n\n  if (результаты.достигнута !== -1) {\n    console.log(`Достигнута норма часов: ${результаты.достигнута}`);\n    console.log(`Дневные переработки (часов): ${результаты.суммаПервогоМассива}`);\n    console.log(`Ночные переработки (часов): ${результаты.суммаИзВторогоМассива}`);\n    console.log(`Оставшееся время: ${результаты.оставшаяСумма}`);\n\n    // Рассчитываем цену за час\n    const ценаЗаЧас = оклад / нормаЧасов;\n    console.log(`Цена за час: ${ценаЗаЧас}`);\n\n    // Рассчитываем цену переработки (умножаем цену за час на 1.5)\n    const ценаПереработки = ценаЗаЧас * 1.5;\n    console.log(`Цена переработки: ${ценаПереработки}`);\n\n    // Рассчитываем дневные переработки (умножаем цену переработки на дневные переработки и вычитаем 13%)\n    const дневныеПереработки = ценаПереработки * результаты.суммаПервогоМассива * 0.87;\n    console.log(`Дневные переработки: ${дневныеПереработки}`);\n\n    // Рассчитываем ночные переработки (умножаем цену переработки на ночные переработки, прибавляем 20%, и вычитаем 13%)\n    const ночныеПереработки = ценаПереработки * (результаты.суммаИзВторогоМассива * 1.2) * 0.87;\n    console.log(`Ночные переработки: ${ночныеПереработки}`);\n\n    // Рассчитываем величину 20% от суммы из второго массива до достижения нормы часов\n    const ночныеВоВремяНормыЧасов = результаты.суммаИзВторогоМассива * ценаЗаЧас * 0.2;\n    console.log(`Ночные во время нормы часов: ${ночныеВоВремяНормыЧасов}`);\n\n    // Рассчитываем итоговую зарплату (дневные переработки + ночные переработки + 20% от суммы из второго массива + 100000)\n    const итоговаяЗП = дневныеПереработки + ночныеПереработки + ночныеВоВремяНормыЧасов + 100000;\n\n    // Округляем значения до целых чисел\n    const округленнаяДневныеПереработки = Math.round(дневныеПереработки);\n    const округленныеНочныеПереработки = Math.round(ночныеПереработки);\n    const округленныеНочныеВоВремяНормыЧасов = Math.round(ночныеВоВремяНормыЧасов);\n    const округленнаяИтоговаяЗП = Math.round(итоговаяЗП);\n\n    console.log(`Округленные дневные переработки: ${округленнаяДневныеПереработки}`);\n    console.log(`Округленные ночные переработки: ${округленныеНочныеПереработки}`);\n    console.log(`Округленные ночные во время нормы часов: ${округленныеНочныеВоВремяНормыЧасов}`);\n    console.log(`Округленная итоговая зарплата: ${округленнаяИтоговаяЗП}`);\n  } else {\n    console.log('Не удалось достичь нормы часов.');\n  }\n\n  const handleInputChange = (event, setState) => {\n    const { value } = event.target;\n    setState(value);\n  };\n\n  return (\n    <div className=\"App list\">\n      <label>\n        Норма часов:\n        <input type=\"number\" value={нормаЧасов} onChange={(e) => handleInputChange(e, установитьНормуЧасов)} />\n      </label>\n\n      <label>\n        Оклад:\n        <input type=\"number\" value={оклад} onChange={(e) => handleInputChange(e, установитьОклад)} />\n      </label>\n\n      <label>\n        Дневные часы через запятую:\n        <input type=\"text\" value={массив1.join(',')} onChange={(e) => handleInputChange(e, установитьМассив1)} />\n      </label>\n\n      <label>\n        Ночные часы через запятую:\n        <input type=\"text\" value={массив2.join(',')} onChange={(e) => handleInputChange(e, установитьМассив2)} />\n      </label>\n\n      {/* Выводим результаты для пользователя */}\n      {результаты.достигнута !== -1 ? (\n        <div>\n          <p>Норма часов: {нормаЧасов}</p>\n          <p>Общее количество переработок: {результаты.общаяСумма}</p>\n          <p>Дневные переработки (часов): {результаты.суммаПервогоМассива}</p>\n          <p>Ночные переработки (часов): {результаты.суммаИзВторогоМассива}</p>\n          <p>Оставшееся время: {результаты.оставшаяСумма}</p>\n          {/* Добавьте остальной вывод */}\n        </div>\n      ) : (\n        <p>Не удалось достичь нормы часов.</p>\n      )}\n\n      <button onClick={рассчитатьИтоговуюЗП}>Рассчитать</button>\n      <div></div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}