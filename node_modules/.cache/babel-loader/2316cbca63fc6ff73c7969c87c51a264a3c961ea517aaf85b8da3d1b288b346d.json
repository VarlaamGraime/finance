{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\Documents\\\\finance\\\\finance\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9]);\n  const [массив2, установитьМассив2] = useState([6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7]);\n  const [результаты, установитьРезультаты] = useState(null);\n  const [ценаЧаса, установитьЦенуЧаса] = useState(0);\n  const [ценаЧасаПереработки, установитьЦенуЧасаПереработки] = useState(0);\n  const рассчитатьИтоговуюЗП = () => {\n    const новыеРезультаты = рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад);\n    установитьРезультаты(новыеРезультаты);\n  };\n  const handleInputChange = (event, setState) => {\n    const {\n      value\n    } = event.target;\n    if (setState === установитьОклад) {\n      // Обновляем цены при изменении оклада\n      const новаяЦенаЧаса = нормаЧасов !== 0 ? оклад / нормаЧасов : 0;\n      const новаяЦенаЧасаПереработки = новаяЦенаЧаса * 1.5;\n      установитьЦенуЧаса(новаяЦенаЧаса);\n      установитьЦенуЧасаПереработки(новаяЦенаЧасаПереработки);\n    }\n    const новыйМассив = value.split(',').map(Number); // Преобразование строки в массив чисел\n    setState(новыйМассив);\n  };\n\n  // Обновляем цены при изменении оклада\n  useEffect(() => {\n    const новаяЦенаЧаса = нормаЧасов !== 0 && !isNaN(оклад / нормаЧасов) ? оклад / нормаЧасов : 0;\n    const новаяЦенаЧасаПереработки = новаяЦенаЧаса * 1.5;\n    установитьЦенуЧаса(новаяЦенаЧаса);\n    установитьЦенуЧасаПереработки(новаяЦенаЧасаПереработки);\n  }, [оклад, нормаЧасов]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App list\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: нормаЧасов,\n        onChange: e => handleInputChange(e, установитьНормуЧасов)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041E\\u043A\\u043B\\u0430\\u0434:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: оклад,\n        onChange: e => handleInputChange(e, установитьОклад)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u0414\\u043D\\u0435\\u0432\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0441\\u044B \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0437\\u0430\\u043F\\u044F\\u0442\\u0443\\u044E:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив1.join(','),\n        onChange: e => handleInputChange(e, установитьМассив1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0441\\u044B \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0437\\u0430\\u043F\\u044F\\u0442\\u0443\\u044E:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив2.join(','),\n        onChange: e => handleInputChange(e, установитьМассив2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: рассчитатьИтоговуюЗП,\n      children: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), результаты && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432: \", нормаЧасов]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043E\\u043A: \", результаты.количествоПереработок]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0414\\u043D\\u0435\\u0432\\u043D\\u044B\\u0445 \\u0432 \\u0441\\u043E\\u0441\\u0442\\u0430\\u0432\\u0435 \\u043D\\u043E\\u0440\\u043C\\u044B (\\u0447\\u0430\\u0441\\u043E\\u0432): \", результаты.суммаПервогоМассива]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041D\\u043E\\u0447\\u043D\\u044B\\u0445 \\u0432 \\u0441\\u043E\\u0441\\u0442\\u0430\\u0432\\u0435 \\u043D\\u043E\\u0440\\u043C\\u044B (\\u0447\\u0430\\u0441\\u043E\\u0432): \", результаты.суммаИзВторогоМассива]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u0434\\u0435\\u043D\\u044C: \", результаты.суммаОставшихсяЧасовМассив1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u043D\\u043E\\u0447\\u044C: \", результаты.суммаОставшихсяЧасовМассив2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0418\\u0442\\u043E\\u0433\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432: \", результаты.итого]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0426\\u0435\\u043D\\u0430 \\u0447\\u0430\\u0441\\u0430: \", результаты.ценаЧаса, \"\\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0426\\u0435\\u043D\\u0430 \\u0447\\u0430\\u0441\\u0430 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438: \", результаты.ценаЧасаПереработки, \"\\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0441\\u0443\\u043C\\u043C\\u0430 \\u0437\\u0430 \\u043D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u0432 \\u0441\\u043E\\u0441\\u0442\\u0430\\u0432\\u0435 \\u043D\\u043E\\u0440\\u043C\\u044B (\\u0440\\u0443\\u0431\\u043B\\u0435\\u0439): \", результаты.суммаИзВторогоМассива * ценаЧаса * 1.2 - результаты.суммаИзВторогоМассива * ценаЧаса, \"\\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u0434\\u0435\\u043D\\u044C: \", результаты.суммаОставшихсяЧасовМассив1 * ценаЧасаПереработки, \"\\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u043D\\u043E\\u0447\\u044C: \", результаты.суммаОставшихсяЧасовМассив2 * ценаЧасаПереработки * 1.2, \" \\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0418\\u0442\\u043E\\u0433\\u043E\\u0432\\u0430\\u044F \\u0437\\u043F \", Math.round(оклад + результаты.суммаОставшихсяЧасовМассив2 * ценаЧасаПереработки * 1.2 + результаты.суммаОставшихсяЧасовМассив1 * ценаЧасаПереработки + результаты.суммаИзВторогоМассива * ценаЧаса * 1.2 - результаты.суммаИзВторогоМассива * ценаЧаса), \" \\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m6vcZvqYcUmNLd5AAbjgx/2eUlo=\");\n_c = App;\nexport default App;\nfunction рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад) {\n  let общаяСумма = 0;\n  let суммаПервогоМассива = 0;\n  let суммаИзВторогоМассива = 0;\n  let оставшиеЧасыМассив1 = 0;\n  let оставшиеЧасыМассив2 = 0;\n  let суммаОставшихсяЧасовМассив1 = 0;\n  let суммаОставшихсяЧасовМассив2 = 0;\n  let i = 0;\n  let j = 0;\n  while (i < массив1.length || j < массив2.length) {\n    if (i < массив1.length) {\n      общаяСумма += массив1[i];\n      суммаПервогоМассива += массив1[i];\n      оставшиеЧасыМассив1 += массив1[i];\n      i++;\n    }\n    if (общаяСумма >= нормаЧасов) {\n      break;\n    }\n    if (j < массив2.length) {\n      общаяСумма += массив2[j];\n      суммаИзВторогоМассива += массив2[j];\n      оставшиеЧасыМассив2 += массив2[j];\n      j++;\n    }\n    if (общаяСумма >= нормаЧасов) {\n      break;\n    }\n  }\n\n  // Рассчитываем суммы оставшихся часов после набора нормы\n  суммаОставшихсяЧасовМассив1 = массив1.slice(i).reduce((acc, curr) => acc + curr, 0);\n  суммаОставшихсяЧасовМассив2 = массив2.slice(j).reduce((acc, curr) => acc + curr, 0);\n  const итого = массив1.concat(массив2).reduce((acc, curr) => acc + curr, 0);\n  const оставшаяСумма = Math.max(0, общаяСумма - нормаЧасов);\n  const количествоПереработок = оставшаяСумма;\n  const ценаЧаса = оклад / нормаЧасов;\n  const ценаЧасаПереработки = ценаЧаса * 1.5; // Пусть переработка оплачивается с коэффициентом 1.5\n\n  return {\n    общаяСумма,\n    суммаПервогоМассива,\n    суммаИзВторогоМассива,\n    оставшаяСумма,\n    количествоПереработок,\n    итого,\n    ценаЧаса,\n    ценаЧасаПереработки,\n    оставшиеЧасыМассив1,\n    оставшиеЧасыМассив2,\n    суммаОставшихсяЧасовМассив1,\n    суммаОставшихсяЧасовМассив2\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","нормаЧасов","установитьНормуЧасов","оклад","установитьОклад","массив1","установитьМассив1","массив2","установитьМассив2","результаты","установитьРезультаты","ценаЧаса","установитьЦенуЧаса","ценаЧасаПереработки","установитьЦенуЧасаПереработки","рассчитатьИтоговуюЗП","новыеРезультаты","рассчитатьЗарплату","handleInputChange","event","setState","value","target","новаяЦенаЧаса","новаяЦенаЧасаПереработки","новыйМассив","split","map","Number","isNaN","className","children","type","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","join","onClick","количествоПереработок","суммаПервогоМассива","суммаИзВторогоМассива","суммаОставшихсяЧасовМассив1","суммаОставшихсяЧасовМассив2","итого","Math","round","_c","общаяСумма","оставшиеЧасыМассив1","оставшиеЧасыМассив2","i","j","length","slice","reduce","acc","curr","concat","оставшаяСумма","max","$RefreshReg$"],"sources":["C:/Users/Александр/Documents/finance/finance/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9]);\n  const [массив2, установитьМассив2] = useState([6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7]);\n  const [результаты, установитьРезультаты] = useState(null);\n  const [ценаЧаса, установитьЦенуЧаса] = useState(0);\n  const [ценаЧасаПереработки, установитьЦенуЧасаПереработки] = useState(0);\n  const рассчитатьИтоговуюЗП = () => {\n    const новыеРезультаты = рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад);\n    установитьРезультаты(новыеРезультаты);\n  };\n  const handleInputChange = (event, setState) => {\n    const { value } = event.target;\n  \n    if (setState === установитьОклад) {\n      // Обновляем цены при изменении оклада\n      const новаяЦенаЧаса = нормаЧасов !== 0 ? оклад / нормаЧасов : 0;\n      const новаяЦенаЧасаПереработки = новаяЦенаЧаса * 1.5;\n      установитьЦенуЧаса(новаяЦенаЧаса);\n      установитьЦенуЧасаПереработки(новаяЦенаЧасаПереработки);\n    }\n  \n    const новыйМассив = value.split(',').map(Number); // Преобразование строки в массив чисел\n    setState(новыйМассив);\n  };\n\n  // Обновляем цены при изменении оклада\n  useEffect(() => {\n    const новаяЦенаЧаса = нормаЧасов !== 0 && !isNaN(оклад / нормаЧасов) ? оклад / нормаЧасов : 0;\n    const новаяЦенаЧасаПереработки = новаяЦенаЧаса * 1.5;\n    установитьЦенуЧаса(новаяЦенаЧаса);\n    установитьЦенуЧасаПереработки(новаяЦенаЧасаПереработки);\n  }, [оклад, нормаЧасов]);\n\n  return (\n    <div className=\"App list\">\n      <label>\n        Норма часов:\n        <input type=\"number\" value={нормаЧасов} onChange={(e) => handleInputChange(e, установитьНормуЧасов)} />\n      </label>\n\n      <label>\n        Оклад:\n        <input type=\"number\" value={оклад} onChange={(e) => handleInputChange(e, установитьОклад)} />\n      </label>\n\n      <label>\n        Дневные часы через запятую:\n        <input type=\"text\" value={массив1.join(',')} onChange={(e) => handleInputChange(e, установитьМассив1)} />\n      </label>\n\n      <label>\n        Ночные часы через запятую:\n        <input type=\"text\" value={массив2.join(',')} onChange={(e) => handleInputChange(e, установитьМассив2)} />\n      </label>\n\n      <button onClick={рассчитатьИтоговуюЗП}>Рассчитать</button>\n\n      {/* Вывод результатов */}\n      {результаты && (\n        <div>\n          <p>Норма часов: {нормаЧасов}</p>\n          <p>Общее количество переработок: {результаты.количествоПереработок}</p>\n          <p>Дневных в составе нормы (часов): {результаты.суммаПервогоМассива}</p>\n          <p>Ночных в составе нормы (часов): {результаты.суммаИзВторогоМассива}</p>\n          <p>Переработки день: {результаты.суммаОставшихсяЧасовМассив1}</p>\n          <p>Переработки ночь: {результаты.суммаОставшихсяЧасовМассив2}</p>\n          <p>Итого часов: {результаты.итого}</p>\n          <p>Цена часа: {результаты.ценаЧаса}руб</p>\n          <p>Цена часа переработки: {результаты.ценаЧасаПереработки}руб</p>\n          <p>сумма за ночные в составе нормы (рублей): {результаты.суммаИзВторогоМассива*ценаЧаса*1.2 - (результаты.суммаИзВторогоМассива*ценаЧаса) }руб</p>\n          <p>Переработки день: {результаты.суммаОставшихсяЧасовМассив1*ценаЧасаПереработки}руб</p>\n          <p>Переработки ночь: {результаты.суммаОставшихсяЧасовМассив2*ценаЧасаПереработки*1.2} руб</p>\n          <p>Итоговая зп { Math.round(оклад+результаты.суммаОставшихсяЧасовМассив2*ценаЧасаПереработки*1.2+результаты.суммаОставшихсяЧасовМассив1*ценаЧасаПереработки+результаты.суммаИзВторогоМассива*ценаЧаса*1.2 - (результаты.суммаИзВторогоМассива*ценаЧаса))} руб</p>\n\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\nfunction рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад) {\n  let общаяСумма = 0;\n  let суммаПервогоМассива = 0;\n  let суммаИзВторогоМассива = 0;\n  let оставшиеЧасыМассив1 = 0;\n  let оставшиеЧасыМассив2 = 0;\n  let суммаОставшихсяЧасовМассив1 = 0;\n  let суммаОставшихсяЧасовМассив2 = 0;\n\n  let i = 0;\n  let j = 0;\n\n  while (i < массив1.length || j < массив2.length) {\n    if (i < массив1.length) {\n      общаяСумма += массив1[i];\n      суммаПервогоМассива += массив1[i];\n      оставшиеЧасыМассив1 += массив1[i];\n      i++;\n    }\n\n    if (общаяСумма >= нормаЧасов) {\n      break;\n    }\n\n    if (j < массив2.length) {\n      общаяСумма += массив2[j];\n      суммаИзВторогоМассива += массив2[j];\n      оставшиеЧасыМассив2 += массив2[j];\n      j++;\n    }\n\n    if (общаяСумма >= нормаЧасов) {\n      break;\n    }\n  }\n\n  // Рассчитываем суммы оставшихся часов после набора нормы\n  суммаОставшихсяЧасовМассив1 = массив1.slice(i).reduce((acc, curr) => acc + curr, 0);\n  суммаОставшихсяЧасовМассив2 = массив2.slice(j).reduce((acc, curr) => acc + curr, 0);\n\n  const итого = массив1.concat(массив2).reduce((acc, curr) => acc + curr, 0);\n  const оставшаяСумма = Math.max(0, общаяСумма - нормаЧасов);\n  const количествоПереработок = оставшаяСумма;\n\n  const ценаЧаса = оклад / нормаЧасов;\n  const ценаЧасаПереработки = ценаЧаса * 1.5; // Пусть переработка оплачивается с коэффициентом 1.5\n\n  return {\n    общаяСумма,\n    суммаПервогоМассива,\n    суммаИзВторогоМассива,\n    оставшаяСумма,\n    количествоПереработок,\n    итого,\n    ценаЧаса,\n    ценаЧасаПереработки,\n    оставшиеЧасыМассив1,\n    оставшиеЧасыМассив2,\n    суммаОставшихсяЧасовМассив1,\n    суммаОставшихсяЧасовМассив2\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}