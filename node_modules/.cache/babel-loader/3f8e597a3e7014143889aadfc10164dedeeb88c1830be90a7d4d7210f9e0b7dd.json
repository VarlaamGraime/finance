{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\Documents\\\\finance\\\\finance\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9]);\n  const [массив2, установитьМассив2] = useState([6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7]);\n  const рассчитатьИтоговуюЗП = () => {\n    const результат = суммаДоЗначения(массив1, массив2, нормаЧасов);\n    console.log(`Норма часов: ${нормаЧасов}`);\n    console.log(`Количество переработок: ${результат.общаяСумма}`);\n    if (результат.достигнута !== -1) {\n      console.log(`Достигнута норма часов: ${результат.достигнута}`);\n      console.log(`Дневные переработки (часов): ${результат.суммаПервогоМассива}`);\n      console.log(`Ночные переработки (часов): ${результат.суммаИзВторогоМассива}`);\n      console.log(`Оставшееся время: ${результат.оставшаяСумма}`);\n\n      // Рассчитываем цену за час\n      const ценаЗаЧас = оклад / нормаЧасов;\n      console.log(`Цена за час: ${ценаЗаЧас}`);\n\n      // Рассчитываем цену переработки (умножаем цену за час на 1.5)\n      const ценаПереработки = ценаЗаЧас * 1.5;\n      console.log(`Цена переработки: ${ценаПереработки}`);\n\n      // Рассчитываем дневные переработки (умножаем цену переработки на дневные переработки и вычитаем 13%)\n      const дневныеПереработки = ценаПереработки * результат.суммаПервогоМассива * 0.87;\n      console.log(`Дневные переработки: ${дневныеПереработки}`);\n\n      // Рассчитываем ночные переработки (умножаем цену переработки на ночные переработки, прибавляем 20%, и вычитаем 13%)\n      const ночныеПереработки = ценаПереработки * (результат.суммаИзВторогоМассива * 1.2) * 0.87;\n      console.log(`Ночные переработки: ${ночныеПереработки}`);\n\n      // Рассчитываем величину 20% от суммы из второго массива до достижения нормы часов\n      const ночныеВоВремяНормыЧасов = результат.суммаИзВторогоМассива * ценаЗаЧас * 0.2;\n      console.log(`Ночные во время нормы часов: ${ночныеВоВремяНормыЧасов}`);\n\n      // Рассчитываем итоговую зарплату (дневные переработки + ночные переработки + 20% от суммы из второго массива + 100000)\n      const итоговаяЗП = дневныеПереработки + ночныеПереработки + ночныеВоВремяНормыЧасов + 100000;\n\n      // Округляем значения до целых чисел\n      const округленнаяДневныеПереработки = Math.round(дневныеПереработки);\n      const округленныеНочныеПереработки = Math.round(ночныеПереработки);\n      const округленныеНочныеВоВремяНормыЧасов = Math.round(ночныеВоВремяНормыЧасов);\n      const округленнаяИтоговаяЗП = Math.round(итоговаяЗП);\n      console.log(`Округленные дневные переработки: ${округленнаяДневныеПереработки}`);\n      console.log(`Округленные ночные переработки: ${округленныеНочныеПереработки}`);\n      console.log(`Округленные ночные во время нормы часов: ${округленныеНочныеВоВремяНормыЧасов}`);\n      console.log(`Округленная итоговая зарплата: ${округленнаяИтоговаяЗП}`);\n    } else {\n      console.log('Не удалось достичь нормы часов.');\n    }\n  };\n  const handleInputChange = (event, setState) => {\n    const {\n      value\n    } = event.target;\n    setState(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: нормаЧасов,\n        onChange: e => handleInputChange(e, установитьНормуЧасов)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041E\\u043A\\u043B\\u0430\\u0434:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: оклад,\n        onChange: e => handleInputChange(e, установитьОклад)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041C\\u0430\\u0441\\u0441\\u0438\\u0432 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 1:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив1.join(','),\n        onChange: e => handleInputChange(e, установитьМассив1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041C\\u0430\\u0441\\u0441\\u0438\\u0432 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 2:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив2.join(','),\n        onChange: e => handleInputChange(e, установитьМассив2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: рассчитатьИтоговуюЗП,\n      children: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5BI+o3P2Ea4Y6Rgjhx+3rIVXU5w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","нормаЧасов","установитьНормуЧасов","оклад","установитьОклад","массив1","установитьМассив1","массив2","установитьМассив2","рассчитатьИтоговуюЗП","результат","суммаДоЗначения","console","log","общаяСумма","достигнута","суммаПервогоМассива","суммаИзВторогоМассива","оставшаяСумма","ценаЗаЧас","ценаПереработки","дневныеПереработки","ночныеПереработки","ночныеВоВремяНормыЧасов","итоговаяЗП","округленнаяДневныеПереработки","Math","round","округленныеНочныеПереработки","округленныеНочныеВоВремяНормыЧасов","округленнаяИтоговаяЗП","handleInputChange","event","setState","value","target","className","children","type","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","join","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Александр/Documents/finance/finance/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9]);\n  const [массив2, установитьМассив2] = useState([6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7]);\n\n  const рассчитатьИтоговуюЗП = () => {\n    const результат = суммаДоЗначения(массив1, массив2, нормаЧасов);\n\n    console.log(`Норма часов: ${нормаЧасов}`);\n    console.log(`Количество переработок: ${результат.общаяСумма}`);\n\n    if (результат.достигнута !== -1) {\n      console.log(`Достигнута норма часов: ${результат.достигнута}`);\n      console.log(`Дневные переработки (часов): ${результат.суммаПервогоМассива}`);\n      console.log(`Ночные переработки (часов): ${результат.суммаИзВторогоМассива}`);\n      console.log(`Оставшееся время: ${результат.оставшаяСумма}`);\n\n      // Рассчитываем цену за час\n      const ценаЗаЧас = оклад / нормаЧасов;\n      console.log(`Цена за час: ${ценаЗаЧас}`);\n\n      // Рассчитываем цену переработки (умножаем цену за час на 1.5)\n      const ценаПереработки = ценаЗаЧас * 1.5;\n      console.log(`Цена переработки: ${ценаПереработки}`);\n\n      // Рассчитываем дневные переработки (умножаем цену переработки на дневные переработки и вычитаем 13%)\n      const дневныеПереработки = ценаПереработки * результат.суммаПервогоМассива * 0.87;\n      console.log(`Дневные переработки: ${дневныеПереработки}`);\n\n      // Рассчитываем ночные переработки (умножаем цену переработки на ночные переработки, прибавляем 20%, и вычитаем 13%)\n      const ночныеПереработки = ценаПереработки * (результат.суммаИзВторогоМассива * 1.2) * 0.87;\n      console.log(`Ночные переработки: ${ночныеПереработки}`);\n\n      // Рассчитываем величину 20% от суммы из второго массива до достижения нормы часов\n      const ночныеВоВремяНормыЧасов = результат.суммаИзВторогоМассива * ценаЗаЧас * 0.2;\n      console.log(`Ночные во время нормы часов: ${ночныеВоВремяНормыЧасов}`);\n\n      // Рассчитываем итоговую зарплату (дневные переработки + ночные переработки + 20% от суммы из второго массива + 100000)\n      const итоговаяЗП = дневныеПереработки + ночныеПереработки + ночныеВоВремяНормыЧасов + 100000;\n\n      // Округляем значения до целых чисел\n      const округленнаяДневныеПереработки = Math.round(дневныеПереработки);\n      const округленныеНочныеПереработки = Math.round(ночныеПереработки);\n      const округленныеНочныеВоВремяНормыЧасов = Math.round(ночныеВоВремяНормыЧасов);\n      const округленнаяИтоговаяЗП = Math.round(итоговаяЗП);\n\n      console.log(`Округленные дневные переработки: ${округленнаяДневныеПереработки}`);\n      console.log(`Округленные ночные переработки: ${округленныеНочныеПереработки}`);\n      console.log(`Округленные ночные во время нормы часов: ${округленныеНочныеВоВремяНормыЧасов}`);\n      console.log(`Округленная итоговая зарплата: ${округленнаяИтоговаяЗП}`);\n    } else {\n      console.log('Не удалось достичь нормы часов.');\n    }\n  };\n\n  const handleInputChange = (event, setState) => {\n    const { value } = event.target;\n    setState(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <label>\n        Норма часов:\n        <input type=\"number\" value={нормаЧасов} onChange={(e) => handleInputChange(e, установитьНормуЧасов)} />\n      </label>\n\n      <label>\n        Оклад:\n        <input type=\"number\" value={оклад} onChange={(e) => handleInputChange(e, установитьОклад)} />\n      </label>\n\n      <label>\n        Массив данных 1:\n        <input type=\"text\" value={массив1.join(',')} onChange={(e) => handleInputChange(e, установитьМассив1)} />\n      </label>\n\n      <label>\n        Массив данных 2:\n        <input type=\"text\" value={массив2.join(',')} onChange={(e) => handleInputChange(e, установитьМассив2)} />\n      </label>\n\n      <button onClick={рассчитатьИтоговуюЗП}>Рассчитать</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}