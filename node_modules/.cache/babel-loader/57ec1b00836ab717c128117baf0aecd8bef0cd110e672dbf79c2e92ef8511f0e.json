{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\Documents\\\\finance\\\\finance\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([]);\n  const [массив2, установитьМассив2] = useState([]);\n  const [результаты, установитьРезультаты] = useState(null);\n  const рассчитатьИтоговуюЗП = () => {\n    const новыеРезультаты = рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад);\n    установитьРезультаты(новыеРезультаты);\n  };\n  const ценаЧаса = оклад / нормаЧасов;\n  const ценаЧасаПереработки = ценаЧаса * 1.5; // Пусть переработка оплачивается с коэффициентом 1.5\n  useEffect(() => {\n    const новыеРезультаты = рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад);\n    установитьРезультаты(новыеРезультаты);\n  }, [массив1, массив2, нормаЧасов, оклад]);\n  const handleInputChange = (event, setState) => {\n    const {\n      value\n    } = event.target;\n    const новыйМассив = value.split(',').map(Number);\n    setState(Array.isArray(новыйМассив) ? новыйМассив : parseInt(value, 10));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App list\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: нормаЧасов,\n        onChange: e => handleInputChange(e, установитьНормуЧасов)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041E\\u043A\\u043B\\u0430\\u0434:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: оклад,\n        onChange: e => handleInputChange(e, установитьОклад)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u0414\\u043D\\u0435\\u0432\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0441\\u044B \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0437\\u0430\\u043F\\u044F\\u0442\\u0443\\u044E:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив1.join(','),\n        onChange: e => handleInputChange(e, установитьМассив1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0441\\u044B \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0437\\u0430\\u043F\\u044F\\u0442\\u0443\\u044E:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив2.join(','),\n        onChange: e => handleInputChange(e, установитьМассив2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: рассчитатьИтоговуюЗП,\n      children: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), результаты && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432: \", нормаЧасов]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0414\\u043D\\u0435\\u0432\\u043D\\u044B\\u0445 \\u0432 \\u0441\\u043E\\u0441\\u0442\\u0430\\u0432\\u0435 \\u043D\\u043E\\u0440\\u043C\\u044B (\\u0447\\u0430\\u0441\\u043E\\u0432): \", результаты.суммаПервогоМассива]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041D\\u043E\\u0447\\u043D\\u044B\\u0445 \\u0432 \\u0441\\u043E\\u0441\\u0442\\u0430\\u0432\\u0435 \\u043D\\u043E\\u0440\\u043C\\u044B (\\u0447\\u0430\\u0441\\u043E\\u0432): \", результаты.суммаИзВторогоМассива]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u0434\\u0435\\u043D\\u044C: \", результаты.суммаОставшихсяЧасовМассив1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u043D\\u043E\\u0447\\u044C: \", результаты.суммаОставшихсяЧасовМассив2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0418\\u0442\\u043E\\u0433\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432: \", результаты.итого]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0426\\u0435\\u043D\\u0430 \\u0447\\u0430\\u0441\\u0430: \", результаты.ценаЧаса, \"\\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0426\\u0435\\u043D\\u0430 \\u0447\\u0430\\u0441\\u0430 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438: \", результаты.ценаЧасаПереработки, \"\\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0441\\u0443\\u043C\\u043C\\u0430 \\u0437\\u0430 \\u043D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u0432 \\u0441\\u043E\\u0441\\u0442\\u0430\\u0432\\u0435 \\u043D\\u043E\\u0440\\u043C\\u044B (\\u0440\\u0443\\u0431\\u043B\\u0435\\u0439): \", результаты.суммаИзВторогоМассива * ценаЧаса * 1.2 - результаты.суммаИзВторогоМассива * ценаЧаса, \"\\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u0434\\u0435\\u043D\\u044C: \", результаты.суммаОставшихсяЧасовМассив1 * ценаЧасаПереработки, \"\\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u043D\\u043E\\u0447\\u044C: \", результаты.суммаОставшихсяЧасовМассив2 * ценаЧасаПереработки * 1.2, \" \\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0418\\u0442\\u043E\\u0433\\u043E\\u0432\\u0430\\u044F \\u0441\\u0443\\u043C\\u043C\\u0430 \\u0437\\u0430 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \", Math.round(результаты.суммаОставшихсяЧасовМассив2 * ценаЧасаПереработки * 1.2 + результаты.суммаОставшихсяЧасовМассив1 * ценаЧасаПереработки + результаты.суммаИзВторогоМассива * ценаЧаса * 1.2 - результаты.суммаИзВторогоМассива * ценаЧаса + результаты.количествоПереработок * ценаЧаса), \" \\u0440\\u0443\\u0431 (\\u0435\\u0441\\u043B\\u0438 \\u043F\\u0440\\u0438\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0430\\u0448 \\u043E\\u043A\\u043B\\u0430\\u0434, \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0438\\u0442\\u043E\\u0433\\u043E\\u0432\\u0430\\u044F \\u0437\\u043F)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0418\\u0442\\u043E\\u0433\\u043E\\u0432\\u0430\\u044F \\u0437\\u043F \", Math.round(оклад + результаты.суммаОставшихсяЧасовМассив2 * ценаЧасаПереработки * 1.2 + результаты.суммаОставшихсяЧасовМассив1 * ценаЧасаПереработки + результаты.суммаИзВторогоМассива * ценаЧаса * 1.2 - результаты.суммаИзВторогоМассива * ценаЧаса + результаты.количествоПереработок * ценаЧаса), \" \\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0418\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u041D\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0439 \\u043C\\u043E\\u043C\\u0435\\u043D\\u0442 \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0430 \\u0441\\u0447\\u0438\\u0442\\u0430\\u0435\\u0442 \\u0437\\u043F \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E, \\u0435\\u0441\\u043B\\u0438 \\u0443 \\u0432\\u0430\\u0441 \\u0435\\u0441\\u0442\\u044C \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u041D\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0439 \\u043C\\u043E\\u043C\\u0435\\u043D\\u0442 \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0430 \\u0441\\u0447\\u0438\\u0442\\u0430\\u0435\\u0442 \\u0437\\u043F \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E, \\u0435\\u0441\\u043B\\u0438 \\u0443 \\u0432\\u0430\\u0441 \\u0435\\u0441\\u0442\\u044C \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EjF4YWHOjGhrNU2V0MQQBHAi8Fg=\");\n_c = App;\nexport default App;\nfunction рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад) {\n  let общаяСумма = 0;\n  let суммаПервогоМассива = 0;\n  let суммаИзВторогоМассива = 0;\n  let оставшиеЧасыМассив1 = 0;\n  let оставшиеЧасыМассив2 = 0;\n  let суммаОставшихсяЧасовМассив1 = 0;\n  let суммаОставшихсяЧасовМассив2 = 0;\n  let i = 0;\n  let j = 0;\n  while (i < массив1.length || j < массив2.length) {\n    if (i < массив1.length) {\n      общаяСумма += массив1[i];\n      суммаПервогоМассива += массив1[i];\n      оставшиеЧасыМассив1 += массив1[i];\n      i++;\n    }\n    if (общаяСумма >= нормаЧасов) {\n      break;\n    }\n    if (j < массив2.length) {\n      общаяСумма += массив2[j];\n      суммаИзВторогоМассива += массив2[j];\n      оставшиеЧасыМассив2 += массив2[j];\n      j++;\n    }\n    if (общаяСумма >= нормаЧасов) {\n      break;\n    }\n  }\n\n  // Рассчитываем суммы оставшихся часов после набора нормы\n  суммаОставшихсяЧасовМассив1 = массив1.slice(i).reduce((acc, curr) => acc + curr, 0);\n  суммаОставшихсяЧасовМассив2 = массив2.slice(j).reduce((acc, curr) => acc + curr, 0);\n  const итого = массив1.concat(массив2).reduce((acc, curr) => acc + curr, 0);\n  const оставшаяСумма = Math.max(0, общаяСумма - нормаЧасов);\n  const количествоПереработок = оставшаяСумма;\n  const ценаЧаса = оклад / нормаЧасов;\n  const ценаЧасаПереработки = ценаЧаса * 1.5; // Пусть переработка оплачивается с коэффициентом 1.5\n\n  return {\n    общаяСумма,\n    суммаПервогоМассива,\n    суммаИзВторогоМассива,\n    оставшаяСумма,\n    количествоПереработок,\n    итого,\n    ценаЧаса,\n    ценаЧасаПереработки,\n    оставшиеЧасыМассив1,\n    оставшиеЧасыМассив2,\n    суммаОставшихсяЧасовМассив1,\n    суммаОставшихсяЧасовМассив2\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","нормаЧасов","установитьНормуЧасов","оклад","установитьОклад","массив1","установитьМассив1","массив2","установитьМассив2","результаты","установитьРезультаты","рассчитатьИтоговуюЗП","новыеРезультаты","рассчитатьЗарплату","ценаЧаса","ценаЧасаПереработки","handleInputChange","event","setState","value","target","новыйМассив","split","map","Number","Array","isArray","parseInt","className","children","type","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","join","onClick","суммаПервогоМассива","суммаИзВторогоМассива","суммаОставшихсяЧасовМассив1","суммаОставшихсяЧасовМассив2","итого","Math","round","количествоПереработок","_c","общаяСумма","оставшиеЧасыМассив1","оставшиеЧасыМассив2","i","j","length","slice","reduce","acc","curr","concat","оставшаяСумма","max","$RefreshReg$"],"sources":["C:/Users/Александр/Documents/finance/finance/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([ ]);\n  const [массив2, установитьМассив2] = useState([ ]);\n  const [результаты, установитьРезультаты] = useState(null);\n\n  const рассчитатьИтоговуюЗП = () => {\n    const новыеРезультаты = рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад);\n    установитьРезультаты(новыеРезультаты);\n  };\n  const ценаЧаса = оклад / нормаЧасов;\n  const ценаЧасаПереработки = ценаЧаса * 1.5; // Пусть переработка оплачивается с коэффициентом 1.5\n  useEffect(() => {\n    const новыеРезультаты = рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад);\n    установитьРезультаты(новыеРезультаты);\n  }, [массив1, массив2, нормаЧасов, оклад]);\n  const handleInputChange = (event, setState) => {\n    const { value } = event.target;\n    const новыйМассив = value.split(',').map(Number);\n    setState(Array.isArray(новыйМассив) ? новыйМассив : parseInt(value, 10));\n  };\n\n\n  return (\n    <div className=\"App list\">\n      <label>\n        Норма часов:\n        <input type=\"number\" value={нормаЧасов} onChange={(e) => handleInputChange(e, установитьНормуЧасов)} />\n      </label>\n\n      <label>\n        Оклад:\n        <input type=\"number\" value={оклад} onChange={(e) => handleInputChange(e, установитьОклад)} />\n      </label>\n\n      <label>\n        Дневные часы через запятую:\n        <input type=\"text\" value={массив1.join(',')} onChange={(e) => handleInputChange(e, установитьМассив1)} />\n      </label>\n\n      <label>\n        Ночные часы через запятую:\n        <input type=\"text\" value={массив2.join(',')} onChange={(e) => handleInputChange(e, установитьМассив2)} />\n      </label>\n\n      <button onClick={рассчитатьИтоговуюЗП}>Рассчитать</button>\n\n      {/* Вывод результатов */}\n      {результаты && (\n        <div>\n          <p>Норма часов: {нормаЧасов}</p>\n          {/* <p>Общее количество переработок: {результаты.количествоПереработок}</p> */}\n          <p>Дневных в составе нормы (часов): {результаты.суммаПервогоМассива}</p>\n          <p>Ночных в составе нормы (часов): {результаты.суммаИзВторогоМассива}</p>\n          <p>Переработки день: {результаты.суммаОставшихсяЧасовМассив1}</p>\n          <p>Переработки ночь: {результаты.суммаОставшихсяЧасовМассив2}</p>\n          <p>Итого часов: {результаты.итого}</p>\n          <p>Цена часа: {результаты.ценаЧаса}руб</p>\n          <p>Цена часа переработки: {результаты.ценаЧасаПереработки}руб</p>\n          <p>сумма за ночные в составе нормы (рублей): {результаты.суммаИзВторогоМассива*ценаЧаса*1.2 - (результаты.суммаИзВторогоМассива*ценаЧаса) }руб</p>\n          <p>Переработки день: {результаты.суммаОставшихсяЧасовМассив1*ценаЧасаПереработки}руб</p>\n          <p>Переработки ночь: {результаты.суммаОставшихсяЧасовМассив2*ценаЧасаПереработки*1.2} руб</p>\n          <p>Итоговая сумма за переработки { Math.round(результаты.суммаОставшихсяЧасовМассив2*ценаЧасаПереработки*1.2+результаты.суммаОставшихсяЧасовМассив1*ценаЧасаПереработки+результаты.суммаИзВторогоМассива*ценаЧаса*1.2 - (результаты.суммаИзВторогоМассива*ценаЧаса) + (результаты.количествоПереработок*ценаЧаса))} руб (если прибавить ваш оклад, будет итоговая зп)</p>\n          <p>Итоговая зп { Math.round(оклад+результаты.суммаОставшихсяЧасовМассив2*ценаЧасаПереработки*1.2+результаты.суммаОставшихсяЧасовМассив1*ценаЧасаПереработки+результаты.суммаИзВторогоМассива*ценаЧаса*1.2 - (результаты.суммаИзВторогоМассива*ценаЧаса) + (результаты.количествоПереработок*ценаЧаса))} руб</p>\n          <h2>Инструкция</h2>\n          <h4>На данный момент программа считает зп только, если у вас есть переработки</h4>\n          <h4>На данный момент программа считает зп только, если у вас есть переработки</h4>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\nfunction рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад) {\n  let общаяСумма = 0;\n  let суммаПервогоМассива = 0;\n  let суммаИзВторогоМассива = 0;\n  let оставшиеЧасыМассив1 = 0;\n  let оставшиеЧасыМассив2 = 0;\n  let суммаОставшихсяЧасовМассив1 = 0;\n  let суммаОставшихсяЧасовМассив2 = 0;\n\n  let i = 0;\n  let j = 0;\n\n  while (i < массив1.length || j < массив2.length) {\n    if (i < массив1.length) {\n      общаяСумма += массив1[i];\n      суммаПервогоМассива += массив1[i];\n      оставшиеЧасыМассив1 += массив1[i];\n      i++;\n    }\n\n    if (общаяСумма >= нормаЧасов) {\n      break;\n    }\n\n    if (j < массив2.length) {\n      общаяСумма += массив2[j];\n      суммаИзВторогоМассива += массив2[j];\n      оставшиеЧасыМассив2 += массив2[j];\n      j++;\n    }\n\n    if (общаяСумма >= нормаЧасов) {\n      break;\n    }\n  }\n\n  // Рассчитываем суммы оставшихся часов после набора нормы\n  суммаОставшихсяЧасовМассив1 = массив1.slice(i).reduce((acc, curr) => acc + curr, 0);\n  суммаОставшихсяЧасовМассив2 = массив2.slice(j).reduce((acc, curr) => acc + curr, 0);\n\n  const итого = массив1.concat(массив2).reduce((acc, curr) => acc + curr, 0);\n  const оставшаяСумма = Math.max(0, общаяСумма - нормаЧасов);\n  const количествоПереработок = оставшаяСумма;\n\n  const ценаЧаса = оклад / нормаЧасов;\n  const ценаЧасаПереработки = ценаЧаса * 1.5; // Пусть переработка оплачивается с коэффициентом 1.5\n\n  return {\n    общаяСумма,\n    суммаПервогоМассива,\n    суммаИзВторогоМассива,\n    оставшаяСумма,\n    количествоПереработок,\n    итого,\n    ценаЧаса,\n    ценаЧасаПереработки,\n    оставшиеЧасыМассив1,\n    оставшиеЧасыМассив2,\n    суммаОставшихсяЧасовМассив1,\n    суммаОставшихсяЧасовМассив2\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}