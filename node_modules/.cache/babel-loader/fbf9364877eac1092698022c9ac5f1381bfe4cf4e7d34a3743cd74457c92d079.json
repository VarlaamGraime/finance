{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\Documents\\\\finance\\\\finance\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9]);\n  const [массив2, установитьМассив2] = useState([6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7]);\n  const [результаты, установитьРезультаты] = useState(null);\n  const рассчитатьИтоговуюЗП = () => {\n    const новыеРезультаты = рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад);\n    установитьРезультаты(новыеРезультаты);\n  };\n  const ценаЧаса = оклад / нормаЧасов;\n  const ценаЧасаПереработки = ценаЧаса * 1.5; // Пусть переработка оплачивается с коэффициентом 1.5\n  const handleInputChange = (event, setState) => {\n    const {\n      value\n    } = event.target;\n    const новыйМассив = value.split(',').map(Number); // Преобразование строки в массив чисел\n    setState(новыйМассив);\n  };\n  const итоговаяЗП = оклад + результаты.суммаОставшихсяЧасовМассив2 * ценаЧасаПереработки * 1.2 + результаты.суммаОставшихсяЧасовМассив1 * ценаЧасаПереработки + результаты.суммаИзВторогоМассива * ценаЧаса * 1.2 - результаты.суммаИзВторогоМассива * ценаЧаса;\n  const итоговаяЗПВРублях = Math.round(итоговаяЗП);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App list\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: нормаЧасов,\n        onChange: e => handleInputChange(e, установитьНормуЧасов)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041E\\u043A\\u043B\\u0430\\u0434:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: оклад,\n        onChange: e => handleInputChange(e, установитьОклад)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u0414\\u043D\\u0435\\u0432\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0441\\u044B \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0437\\u0430\\u043F\\u044F\\u0442\\u0443\\u044E:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив1.join(','),\n        onChange: e => handleInputChange(e, установитьМассив1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\u041D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0441\\u044B \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0437\\u0430\\u043F\\u044F\\u0442\\u0443\\u044E:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: массив2.join(','),\n        onChange: e => handleInputChange(e, установитьМассив2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: рассчитатьИтоговуюЗП,\n      children: \"\\u0420\\u0430\\u0441\\u0441\\u0447\\u0438\\u0442\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), результаты && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041D\\u043E\\u0440\\u043C\\u0430 \\u0447\\u0430\\u0441\\u043E\\u0432: \", нормаЧасов]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043E\\u043A: \", результаты.количествоПереработок]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0414\\u043D\\u0435\\u0432\\u043D\\u044B\\u0445 \\u0432 \\u0441\\u043E\\u0441\\u0442\\u0430\\u0432\\u0435 \\u043D\\u043E\\u0440\\u043C\\u044B (\\u0447\\u0430\\u0441\\u043E\\u0432): \", результаты.суммаПервогоМассива]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041D\\u043E\\u0447\\u043D\\u044B\\u0445 \\u0432 \\u0441\\u043E\\u0441\\u0442\\u0430\\u0432\\u0435 \\u043D\\u043E\\u0440\\u043C\\u044B (\\u0447\\u0430\\u0441\\u043E\\u0432): \", результаты.суммаИзВторогоМассива]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u0434\\u0435\\u043D\\u044C: \", результаты.суммаОставшихсяЧасовМассив1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u043D\\u043E\\u0447\\u044C: \", результаты.суммаОставшихсяЧасовМассив2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0418\\u0442\\u043E\\u0433\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432: \", результаты.итого]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0426\\u0435\\u043D\\u0430 \\u0447\\u0430\\u0441\\u0430: \", результаты.ценаЧаса, \"\\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0426\\u0435\\u043D\\u0430 \\u0447\\u0430\\u0441\\u0430 \\u043F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438: \", результаты.ценаЧасаПереработки, \"\\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0441\\u0443\\u043C\\u043C\\u0430 \\u0437\\u0430 \\u043D\\u043E\\u0447\\u043D\\u044B\\u0435 \\u0432 \\u0441\\u043E\\u0441\\u0442\\u0430\\u0432\\u0435 \\u043D\\u043E\\u0440\\u043C\\u044B (\\u0440\\u0443\\u0431\\u043B\\u0435\\u0439): \", результаты.суммаИзВторогоМассива * ценаЧаса * 1.2 - результаты.суммаИзВторогоМассива * ценаЧаса, \"\\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u0434\\u0435\\u043D\\u044C: \", результаты.суммаОставшихсяЧасовМассив1 * ценаЧасаПереработки, \"\\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0435\\u0440\\u0435\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0438 \\u043D\\u043E\\u0447\\u044C: \", результаты.суммаОставшихсяЧасовМассив2 * ценаЧасаПереработки * 1.2, \" \\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0418\\u0442\\u043E\\u0433\\u043E\\u0432\\u0430\\u044F \\u0437\\u043F \", итоговаяЗПВРублях, \" \\u0440\\u0443\\u0431\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WPv4nj728q5VOqnlED5C6ouUn2U=\");\n_c = App;\nexport default App;\nfunction рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад) {\n  let общаяСумма = 0;\n  let суммаПервогоМассива = 0;\n  let суммаИзВторогоМассива = 0;\n  let оставшиеЧасыМассив1 = 0;\n  let оставшиеЧасыМассив2 = 0;\n  let суммаОставшихсяЧасовМассив1 = 0;\n  let суммаОставшихсяЧасовМассив2 = 0;\n  let i = 0;\n  let j = 0;\n  while (i < массив1.length || j < массив2.length) {\n    if (i < массив1.length) {\n      общаяСумма += массив1[i];\n      суммаПервогоМассива += массив1[i];\n      оставшиеЧасыМассив1 += массив1[i];\n      i++;\n    }\n    if (общаяСумма >= нормаЧасов) {\n      break;\n    }\n    if (j < массив2.length) {\n      общаяСумма += массив2[j];\n      суммаИзВторогоМассива += массив2[j];\n      оставшиеЧасыМассив2 += массив2[j];\n      j++;\n    }\n    if (общаяСумма >= нормаЧасов) {\n      break;\n    }\n  }\n\n  // Рассчитываем суммы оставшихся часов после набора нормы\n  суммаОставшихсяЧасовМассив1 = массив1.slice(i).reduce((acc, curr) => acc + curr, 0);\n  суммаОставшихсяЧасовМассив2 = массив2.slice(j).reduce((acc, curr) => acc + curr, 0);\n  const итого = массив1.concat(массив2).reduce((acc, curr) => acc + curr, 0);\n  const оставшаяСумма = Math.max(0, общаяСумма - нормаЧасов);\n  const количествоПереработок = оставшаяСумма;\n  const ценаЧаса = оклад / нормаЧасов;\n  const ценаЧасаПереработки = ценаЧаса * 1.5; // Пусть переработка оплачивается с коэффициентом 1.5\n\n  return {\n    общаяСумма,\n    суммаПервогоМассива,\n    суммаИзВторогоМассива,\n    оставшаяСумма,\n    количествоПереработок,\n    итого,\n    ценаЧаса,\n    ценаЧасаПереработки,\n    оставшиеЧасыМассив1,\n    оставшиеЧасыМассив2,\n    суммаОставшихсяЧасовМассив1,\n    суммаОставшихсяЧасовМассив2\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","нормаЧасов","установитьНормуЧасов","оклад","установитьОклад","массив1","установитьМассив1","массив2","установитьМассив2","результаты","установитьРезультаты","рассчитатьИтоговуюЗП","новыеРезультаты","рассчитатьЗарплату","ценаЧаса","ценаЧасаПереработки","handleInputChange","event","setState","value","target","новыйМассив","split","map","Number","итоговаяЗП","суммаОставшихсяЧасовМассив2","суммаОставшихсяЧасовМассив1","суммаИзВторогоМассива","итоговаяЗПВРублях","Math","round","className","children","type","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","join","onClick","количествоПереработок","суммаПервогоМассива","итого","_c","общаяСумма","оставшиеЧасыМассив1","оставшиеЧасыМассив2","i","j","length","slice","reduce","acc","curr","concat","оставшаяСумма","max","$RefreshReg$"],"sources":["C:/Users/Александр/Documents/finance/finance/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [нормаЧасов, установитьНормуЧасов] = useState(167);\n  const [оклад, установитьОклад] = useState(100000);\n  const [массив1, установитьМассив1] = useState([9, 8, 8, 7, 4, 8, 12, 15, 4, 3, 9, 5, 4, 9, 9, 2, 7, 14, 8, 11, 3, 13, 12, 7, 9]);\n  const [массив2, установитьМассив2] = useState([6, 7, 7, 2, 7, 7, 7, 7, 7, 6, 7, 7, 7, 7, 0, 7, 4, 7, 5, 6, 4, 6, 4, 6, 7]);\n  const [результаты, установитьРезультаты] = useState(null);\n\n  const рассчитатьИтоговуюЗП = () => {\n    const новыеРезультаты = рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад);\n    установитьРезультаты(новыеРезультаты);\n  };\n  const ценаЧаса = оклад / нормаЧасов;\n  const ценаЧасаПереработки = ценаЧаса * 1.5; // Пусть переработка оплачивается с коэффициентом 1.5\n  const handleInputChange = (event, setState) => {\n    const { value } = event.target;\n    const новыйМассив = value.split(',').map(Number); // Преобразование строки в массив чисел\n    setState(новыйМассив);\n  };\n  const итоговаяЗП =\n  оклад +\n  результаты.суммаОставшихсяЧасовМассив2 * ценаЧасаПереработки * 1.2 +\n  результаты.суммаОставшихсяЧасовМассив1 * ценаЧасаПереработки +\n  результаты.суммаИзВторогоМассива * ценаЧаса * 1.2 -\n  результаты.суммаИзВторогоМассива * ценаЧаса;\n\nconst итоговаяЗПВРублях = Math.round(итоговаяЗП);\n  return (\n    <div className=\"App list\">\n      <label>\n        Норма часов:\n        <input type=\"number\" value={нормаЧасов} onChange={(e) => handleInputChange(e, установитьНормуЧасов)} />\n      </label>\n\n      <label>\n        Оклад:\n        <input type=\"number\" value={оклад} onChange={(e) => handleInputChange(e, установитьОклад)} />\n      </label>\n\n      <label>\n        Дневные часы через запятую:\n        <input type=\"text\" value={массив1.join(',')} onChange={(e) => handleInputChange(e, установитьМассив1)} />\n      </label>\n\n      <label>\n        Ночные часы через запятую:\n        <input type=\"text\" value={массив2.join(',')} onChange={(e) => handleInputChange(e, установитьМассив2)} />\n      </label>\n\n      <button onClick={рассчитатьИтоговуюЗП}>Рассчитать</button>\n\n      {/* Вывод результатов */}\n      {результаты && (\n        <div>\n          <p>Норма часов: {нормаЧасов}</p>\n          <p>Общее количество переработок: {результаты.количествоПереработок}</p>\n          <p>Дневных в составе нормы (часов): {результаты.суммаПервогоМассива}</p>\n          <p>Ночных в составе нормы (часов): {результаты.суммаИзВторогоМассива}</p>\n          <p>Переработки день: {результаты.суммаОставшихсяЧасовМассив1}</p>\n          <p>Переработки ночь: {результаты.суммаОставшихсяЧасовМассив2}</p>\n          <p>Итого часов: {результаты.итого}</p>\n          <p>Цена часа: {результаты.ценаЧаса}руб</p>\n          <p>Цена часа переработки: {результаты.ценаЧасаПереработки}руб</p>\n          <p>сумма за ночные в составе нормы (рублей): {результаты.суммаИзВторогоМассива*ценаЧаса*1.2 - (результаты.суммаИзВторогоМассива*ценаЧаса) }руб</p>\n          <p>Переработки день: {результаты.суммаОставшихсяЧасовМассив1*ценаЧасаПереработки}руб</p>\n          <p>Переработки ночь: {результаты.суммаОставшихсяЧасовМассив2*ценаЧасаПереработки*1.2} руб</p>\n          <p>Итоговая зп {итоговаяЗПВРублях} руб</p>\n\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\nfunction рассчитатьЗарплату(массив1, массив2, нормаЧасов, оклад) {\n  let общаяСумма = 0;\n  let суммаПервогоМассива = 0;\n  let суммаИзВторогоМассива = 0;\n  let оставшиеЧасыМассив1 = 0;\n  let оставшиеЧасыМассив2 = 0;\n  let суммаОставшихсяЧасовМассив1 = 0;\n  let суммаОставшихсяЧасовМассив2 = 0;\n\n  let i = 0;\n  let j = 0;\n\n  while (i < массив1.length || j < массив2.length) {\n    if (i < массив1.length) {\n      общаяСумма += массив1[i];\n      суммаПервогоМассива += массив1[i];\n      оставшиеЧасыМассив1 += массив1[i];\n      i++;\n    }\n\n    if (общаяСумма >= нормаЧасов) {\n      break;\n    }\n\n    if (j < массив2.length) {\n      общаяСумма += массив2[j];\n      суммаИзВторогоМассива += массив2[j];\n      оставшиеЧасыМассив2 += массив2[j];\n      j++;\n    }\n\n    if (общаяСумма >= нормаЧасов) {\n      break;\n    }\n  }\n\n  // Рассчитываем суммы оставшихся часов после набора нормы\n  суммаОставшихсяЧасовМассив1 = массив1.slice(i).reduce((acc, curr) => acc + curr, 0);\n  суммаОставшихсяЧасовМассив2 = массив2.slice(j).reduce((acc, curr) => acc + curr, 0);\n\n  const итого = массив1.concat(массив2).reduce((acc, curr) => acc + curr, 0);\n  const оставшаяСумма = Math.max(0, общаяСумма - нормаЧасов);\n  const количествоПереработок = оставшаяСумма;\n\n  const ценаЧаса = оклад / нормаЧасов;\n  const ценаЧасаПереработки = ценаЧаса * 1.5; // Пусть переработка оплачивается с коэффициентом 1.5\n\n  return {\n    общаяСумма,\n    суммаПервогоМассива,\n    суммаИзВторогоМассива,\n    оставшаяСумма,\n    количествоПереработок,\n    итого,\n    ценаЧаса,\n    ценаЧасаПереработки,\n    оставшиеЧасыМассив1,\n    оставшиеЧасыМассив2,\n    суммаОставшихсяЧасовМассив1,\n    суммаОставшихсяЧасовМассив2\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}